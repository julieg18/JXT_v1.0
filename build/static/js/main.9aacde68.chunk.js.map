{"version":3,"sources":["components/UI/input.jsx","components/DataInsert/InsertPage.jsx","components/Dashboard/TrackPage.jsx","components/UI/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","onChange","onKeyPress","name","id","type","style","placeholder","value","disabled","checked","InsertPage","useState","companyName","setCompanyName","jobURL","setJobURL","checkNew","setCheckNew","applyDate","setApplyDate","checkApplied","setCheckApplied","appliedDate","setAppliedDate","checkPhoneCalled","setCheckPhoneCalled","phoneCallDate","setPhoneCallDate","checkInterviewed","setCheckInterviewed","interviewDate","setInterviewDate","status","setStatus","disable","setDisable","setChecked","response","setResponse","handleChange","event","target","console","log","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","className","for","TrackPage","Navbar","RouterLinkHome","RouterLinkEnter","RouterLinkTrack","App","React","setData","useEffect","linkStyle","margin","textDecoration","color","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aacde68.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({onChange, onKeyPress, \r\n    name, id, type, style, placeholder, value, disabled, checked}) {\r\n    return <input \r\n    onChange = {onChange}\r\n    onKeyPress={onKeyPress}\r\n    name = {name} \r\n    id = {id}   \r\n    type = {type} \r\n    style = {style}\r\n    placeholder = {placeholder} \r\n    value = {value}\r\n    disabled = {disabled}\r\n    checked = {checked} //only use for checkbox type \r\n    ></input>\r\n}; \r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyPress: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    style: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool\r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/input\";\r\n\r\nfunction InsertPage() {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [jobURL, setJobURL] = useState(\"\");\r\n    const [checkNew, setCheckNew] = useState(false);\r\n    const [applyDate, setApplyDate] = useState(\"\");\r\n    const [checkApplied, setCheckApplied] = useState(false);\r\n    const [appliedDate, setAppliedDate] = useState(\"\");\r\n    const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n    const [phoneCallDate, setPhoneCallDate] = useState(\"\");\r\n    const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n    const [interviewDate, setInterviewDate] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");  \r\n    const [disable, setDisable] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const [response, setResponse] = useState(\"\"); \r\n\r\n    function handleChange(event) {\r\n        const {value, name} = event.target; \r\n        \r\n        switch (name){\r\n            case 'companyName':\r\n                setCompanyName(value);\r\n            break;\r\n            case 'jobURL':\r\n                setJobURL(value);\r\n            break;   \r\n            case 'new':\r\n                if (checkNew) {\r\n                    setCheckNew(false);\r\n                    //console.log(\"not checked\");\r\n                    setDisable(false);\r\n                    setChecked(false);\r\n                }else {\r\n                    setCheckNew(true);\r\n                    //console.log(\"checked\");\r\n                    setStatus(value);\r\n                    setDisable(true);\r\n                    setChecked(true);\r\n                }\r\n            break;  \r\n            case 'applied':\r\n                if (checkApplied) {\r\n                    setCheckApplied(false);\r\n                    setDisable(false);\r\n                    setChecked(false);\r\n                }else {\r\n                    setCheckApplied(true);  \r\n                    setStatus(value);\r\n                    setDisable(true);\r\n                    setChecked(true);\r\n                }\r\n            break; \r\n            case 'phoneCalled':\r\n                if (checkPhoneCalled) {\r\n                    setCheckPhoneCalled(false);\r\n                    setDisable(false);\r\n                    setChecked(false);\r\n                }else {\r\n                    setCheckPhoneCalled(true);  \r\n                    setStatus(value);\r\n                    setDisable(true);\r\n                    setChecked(true);\r\n                }\r\n            break; \r\n            case 'interviewed':\r\n                if (checkInterviewed) {\r\n                    setCheckInterviewed(false);\r\n                    setDisable(false);\r\n                    setChecked(false);\r\n                }else {\r\n                    setCheckInterviewed(true);  \r\n                    setStatus(value);\r\n                    setDisable(true);\r\n                    setChecked(true);\r\n                }\r\n            break;                             \r\n            case 'applyDate':\r\n                setApplyDate(value);\r\n            break;  \r\n            case 'appliedDate':\r\n                setAppliedDate(value);\r\n            break; \r\n            case 'phoneCallDate':\r\n                setPhoneCallDate(value);\r\n            break;      \r\n            case 'interviewDate':\r\n                setInterviewDate(value);\r\n            break;                                   \r\n            default:\r\n                console.log(\"Unidentified input field found in the insertPage form\");\r\n        }\r\n    }    \r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();  \r\n        fetch (\"/create\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },    \r\n              body: JSON.stringify({ \r\n                  companyName: companyName,\r\n                  jobURL: jobURL,\r\n                  status: status,\r\n                  applyDate: applyDate,\r\n                  appliedDate: appliedDate,\r\n                  phoneCallDate: phoneCallDate,\r\n                  interviewDate: interviewDate\r\n              }) \r\n        }).then((res) => res.json())\r\n        .then((data) => {\r\n            // console.log(data.message);\r\n            setResponse(data.message);\r\n\r\n            //clear fields \r\n            setCompanyName(\"\");\r\n            setJobURL(\"\");\r\n            setStatus(\"\");\r\n            setApplyDate(\"\"); \r\n            setAppliedDate(\"\");\r\n            setPhoneCallDate(\"\");\r\n            setInterviewDate(\"\");\r\n            setCheckNew(false);\r\n            setCheckApplied(false);\r\n            setCheckPhoneCalled(false);\r\n            setCheckInterviewed(false);\r\n            setDisable(false);  \r\n            setChecked(false);      \r\n        });   \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n            {/* Input Company Name */}\r\n            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Company Name</label>\r\n                    <div className=\"col-sm-2\">\r\n                        <Input \r\n                            name = \"companyName\"\r\n                            type = \"text\" \r\n                            onChange = {handleChange}\r\n                            placeholder = \"Enter Company Name\"\r\n                            value = {companyName}\r\n                        /> \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Post URL */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Job Post URL</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>\r\n                {/*Checkbox Status - New, Applied, Phone-Called, Interviewed */}\r\n                <div className = \"column mt-4 mb-4 d-flex justify-content-center\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" name=\"new\" value=\"new\" onChange = {handleChange} disabled={status === \"new\" ? null : disable}  checked={checked}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox1\">New</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" name=\"applied\" value=\"applied\" onChange = {handleChange} disabled={status === \"applied\" ? null : disable} checked={checked} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox2\">Applied</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" name=\"phoneCalled\" value=\"phoneCalled\" onChange = {handleChange} disabled={status === \"phoneCalled\" ? null : disable} checked={checked} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox3\">Phone-Called</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" name=\"interviewed\" value=\"interviewed\" onChange = {handleChange} disabled={status === \"interviewed\" ? null : disable} checked={checked} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox4\">Interviewed</label>\r\n                    </div>   \r\n                </div> \r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                {/* Checkbox Specific - New */}\r\n                    {checkNew ?                 \r\n                    <div className = \"row mb-3 d-flex justify-content-center\">\r\n                        <label className=\"col-sm-5 col-form-label\">Date to Apply:</label>\r\n                        <div className=\"col-sm-5\">\r\n                            <Input \r\n                                name = \"applyDate\"\r\n                                type = \"date\"\r\n                                onChange = {handleChange}\r\n                                placeholder = \"Enter Date\"\r\n                                value = {applyDate}\r\n                            />   \r\n                        </div>\r\n                    </div> \r\n                    : null}\r\n                {/* Checkbox Specific - Applied */}\r\n                    {checkApplied ?                 \r\n                        <div className = \"row mb-3 d-flex justify-content-center\">\r\n                            <label className=\"col-sm-5 col-form-label\">Applied Date:</label>\r\n                            <div className=\"col-sm-5\">\r\n                                <Input \r\n                                    name = \"appliedDate\"\r\n                                    type = \"date\"\r\n                                    onChange = {handleChange}\r\n                                    placeholder = \"Enter Date\"\r\n                                    value = {appliedDate}\r\n                                />   \r\n                            </div>\r\n                        </div> \r\n                    : null}                \r\n                {/* Checkbox Specific - Phone Called */}\r\n                    {checkPhoneCalled ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">Phone Call(ed) Date:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"phoneCallDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {phoneCallDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                {/* Checkbox Specific - Interviewed */}    \r\n                    {checkInterviewed ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">Interview(ed) Date:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"interviewDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {interviewDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                </div>\r\n                {/* Response - if submit successfully or not */}\r\n                { response ? \r\n                <div className=\"d-flex justify-content-center\">\r\n                    <p className=\"text-success fw-normal fs-6\">{response}</p>\r\n                </div> \r\n                : null}\r\n                {/* Submit Button - Add Job to Database */}\r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                    <Input\r\n                        type = \"submit\"\r\n                        value = \"Add Job\" \r\n                    />\r\n                </div>        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsertPage;","import React from \"react\";\r\n\r\nfunction TrackPage() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            YAY! THIS IS THE TRACK PAGE!!! \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrackPage;","import React from \"react\"; \r\n\r\nfunction Navbar({RouterLinkHome, RouterLinkEnter, RouterLinkTrack}) {\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <span className=\"navbar-brand p-2 mx-2\">{RouterLinkHome}</span>\r\n                    <button className=\"navbar-toggler mx-5\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse mx-4 text-light\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link active text-light mx-2\" aria-current=\"page\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkEnter}</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link text-light mx-2\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkTrack}</span>\r\n                            </li>\r\n                            {/* Dropdown Option */}\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/track-jobs\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Track\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/track-jobs/general\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <button className=\"btn btn-outline-success mx-4\" type=\"submit\">Sign On</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    );\r\n}; \r\n\r\nexport default Navbar;","import React from \"react\";\nimport './App.css';\nimport InsertPage from \"./components/DataInsert/InsertPage\";\nimport TrackPage from \"./components/Dashboard/TrackPage\";\nimport Navbar from \"./components/UI/navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())  \n      .then((data) => setData(data.message));  \n  });\n\n  const linkStyle = {\n    margin: \"0rem\",\n    textDecoration: \"none\",\n    color: 'white'\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      \n      <header className=\"row m-5\">\n      <Router>\n        <div>\n          <Navbar\n            RouterLinkHome = {<Link to=\"/\" style={linkStyle}>JXT Job Tracker</Link>}\n            RouterLinkEnter = {<Link to=\"/enter-page\" style={linkStyle}>Enter</Link>}\n            RouterLinkTrack = {<Link to=\"/track-page\" style={linkStyle}>Track</Link>}\n          />\n        <Switch>\n        <body className=\"row d-flex justify-content-center align-items-center mt-5\">\n          <Route exact path=\"/\">\n            <h1 className=\"text-center\">Welcome to JXT Job Track App!</h1>\n          </Route>\n          <Route path=\"/enter-page\">\n            <InsertPage />\n          </Route>\n          <Route path=\"/track-page\">\n            <TrackPage />\n          </Route>\n          </body>\n        </Switch>\n        </div>\n      </Router>\n      </header>\n      <footer className=\"fixed-bottom\">\n        <p className=\"cpText text-center mt-5\">{ !data ? \"Loading...\" : data }</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}