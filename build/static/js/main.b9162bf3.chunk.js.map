{"version":3,"sources":["components/UI/input.jsx","components/DataInsert/InsertPage.jsx","components/Dashboard/JobCard.jsx","components/Dashboard/TrackPage.jsx","components/UI/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","className","onChange","onKeyPress","name","id","type","style","placeholder","value","disabled","checked","InsertPage","useState","companyName","setCompanyName","jobURL","setJobURL","checkNew","setCheckNew","checkApplied","setCheckApplied","checkPhoneCalled","setCheckPhoneCalled","checkInterviewed","setCheckInterviewed","status","setStatus","statusVerbiage","setStatusVerbiage","statusDate","setStatusDate","disable","setDisable","response","setResponse","handleChange","event","target","console","log","saveToDB","fetch","method","headers","body","JSON","stringify","then","res","json","data","verbiage","message","textColor","onSubmit","preventDefault","for","JobCard","jobAppId","levelOfImportance","currentStatus","currentStatusSetDate","currentStatusVerbiage","levelOfImpColor","setLevelOfImpColor","levelOfImp","setLevelOfImp","isLevelUpdated","SetIsLevelUpdated","newStatus","setNewStatus","newStatusVerbiage","setNewStatusVerbiage","newStatusSetDate","setNewStatusSetDate","updateJobStatus","_id","updatedJobAppStatus","isOpen","setIsOpen","hideModal","selected","href","rel","onClick","Modal","show","size","onHide","scrollable","centered","Header","Title","Body","Footer","TrackPage","React","count","totalJobs","setTotalJobs","newJobs","setNewJobs","appliedJobs","setAppliedJobs","phoneCalledJobs","setPhoneCalledJobs","interviewedJobs","setInterviewedJobs","useEffect","allJobs","foundAllJobs","allJobsCopy","forEach","job","push","length","foundNewJobs","foundAppliedJobs","foundPhoneCalledJobs","foundInterviewedJobs","map","Navbar","RouterLinkHome","RouterLinkEnter","RouterLinkTrack","App","setData","linkStyle","margin","textDecoration","color","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAiCeA,MA9Bf,YACoE,IADpDC,EACmD,EADnDA,UAAWC,EACwC,EADxCA,SAAUC,EAC8B,EAD9BA,WACjCC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QACrD,OAAO,uBACPV,UAAaA,EACbC,SAAYA,EACZC,WAAYA,EACZC,KAAQA,EACRC,GAAMA,EACNC,KAAQA,EACRC,MAASA,EACTC,YAAeA,EACfC,MAASA,EACTC,SAAYA,EACZC,QAAWA,KC4QAC,MAzRf,WACI,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgDR,oBAAS,GAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAAgDV,oBAAS,GAAzD,mBAAOW,EAAP,KAAyBC,EAAzB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAA4Cd,mBAAS,IAArD,mBAAOe,EAAP,KAAuBC,EAAvB,KACA,EAAoChB,mBAAS,IAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAA8BlB,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArB7B,EAAP,EAAOA,MAEP,OAFA,EAAcL,MAGV,IAAK,cACDW,EAAeN,GACnB,MACA,IAAK,SACDQ,EAAUR,GACd,MACA,IAAK,MACGS,GACAC,GAAY,GAEZQ,EAAU,IACVM,GAAW,KAEXd,GAAY,GAEZQ,EAAUlB,GACVoB,EAAkB,iBAClBI,GAAW,IAEnB,MACA,IAAK,UACGb,GACAC,GAAgB,GAChBM,EAAU,IACVM,GAAW,KAEXZ,GAAgB,GAChBM,EAAUlB,GACVoB,EAAkB,gBAClBI,GAAW,IAEnB,MACA,IAAK,cACGX,GACAC,GAAoB,GACpBI,EAAU,IACVM,GAAW,KAEXV,GAAoB,GACpBI,EAAUlB,GACVoB,EAAkB,mBAClBI,GAAW,IAEnB,MACA,IAAK,cACGT,GACAC,GAAoB,GACpBE,EAAU,IACVM,GAAW,KAEXR,GAAoB,GACpBE,EAAUlB,GACVoB,EAAkB,kBAClBI,GAAW,IAEnB,MACA,IAAK,YACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACDF,EAActB,GAClB,MACA,QACI8B,QAAQC,IAAI,0DAyBxB,IAAMC,EAAW,WACbC,MAAO,UAAW,CACdC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBjC,YAAaA,EACbE,OAAQA,EACRU,OAAQA,EACRE,eAAgBA,EAChBE,WAAYA,MAEjBkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GAEHhB,EAAY,CACPiB,SAAUD,EAAKE,QACfC,UAAW,iBAIhBvC,EAAe,IACfE,EAAU,IACVU,EAAU,IACVE,EAAkB,IAClBE,EAAc,IACdZ,GAAY,GACZE,GAAgB,GAChBE,GAAoB,GACpBE,GAAoB,GACpBQ,GAAW,OAInB,OACI,8BACI,uBAAMsB,SA1Dd,SAAsBlB,GAClBA,EAAMmB,iBACc,KAAhB1C,GAAiC,KAAXE,GAA4B,KAAXU,EACvCS,EAAY,CACRiB,SAAU,wEACVE,UAAW,gBAET5B,GACa,KAAfI,EACAK,EAAY,CACRiB,SAAU,kEACVE,UAAW,gBAMnBb,KAyCA,UAEI,sBAAKxC,UAAY,yCAAjB,UACI,uBAAOA,UAAU,gCAAjB,qCACA,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CACIG,KAAO,cACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,mBACdC,MAASK,SAKrB,sBAAKb,UAAY,yCAAjB,UACI,uBAAOA,UAAU,gCAAjB,0BACA,qBAAKA,UAAU,QAAf,SACA,cAAC,EAAD,CACIG,KAAO,SACPE,KAAO,MACPJ,SAAYkC,EACZ5B,YAAc,YACdC,MAASO,SAkBjB,sBAAKf,UAAY,iDAAjB,UACI,sBAAKA,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,MAAMK,MAAM,MAAMP,SAAYkC,EAAc1B,SAAqB,QAAXgB,EAAmB,KAAOM,EAAUrB,UAASO,IACjL,uBAAOjB,UAAU,mBAAmBwD,IAAI,kBAAxC,oBAEJ,sBAAKxD,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,UAAUK,MAAM,UAAUP,SAAYkC,EAAc1B,SAAqB,YAAXgB,EAAuB,KAAOM,EAASrB,UAASS,IAC5L,uBAAOnB,UAAU,mBAAmBwD,IAAI,kBAAxC,wBAEJ,sBAAKxD,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,cAAcK,MAAM,aAAaP,SAAYkC,EAAc1B,SAAqB,eAAXgB,EAA0B,KAAOM,EAASrB,UAASW,IACtM,uBAAOrB,UAAU,mBAAmBwD,IAAI,kBAAxC,6BAEJ,sBAAKxD,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,cAAcK,MAAM,YAAYP,SAAYkC,EAAc1B,SAAqB,cAAXgB,EAAyB,KAAOM,EAASrB,UAASa,IACpM,uBAAOvB,UAAU,mBAAmBwD,IAAI,kBAAxC,+BAGR,sBAAKxD,UAAU,0CAAf,UAEKiB,EACD,sBAAKjB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,YACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAInB,KAEDV,EACG,sBAAKnB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,cACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAIvB,KAEDR,EACO,sBAAKrB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,gBACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAI3B,KAEDN,EACO,sBAAKvB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,gBACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAI3B,QAGJI,EACF,qBAAKjC,UAAU,gCAAf,SACI,mBAAGA,UAAWiC,EAASoB,UAAY,kBAAnC,SAAuDpB,EAASkB,aAElE,KAEF,qBAAKnD,UAAU,0CAAf,SACI,cAAC,EAAD,CACIK,KAAO,SACPG,MAAQ,oB,QC5FjBiD,MArLf,YAAkI,IAAhHC,EAA+G,EAA/GA,SAAU7C,EAAqG,EAArGA,YAAaE,EAAwF,EAAxFA,OAAQ4C,EAAgF,EAAhFA,kBAAmBC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,qBAAsBC,EAAwB,EAAxBA,sBAOrG,EAA8ClD,mBAAS,IAAvD,mBAAOmD,EAAP,KAAwBC,EAAxB,KACA,EAAoCpD,mBAAS,IAA7C,mBAAOqD,EAAP,KAAmBC,EAAnB,KACA,EAA4CtD,oBAAS,GAArD,mBAAOuD,EAAP,KAAuBC,EAAvB,KACA,EAAkCxD,mBAAS,IAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KACA,EAAkD1D,mBAAS,IAA3D,mBAAO2D,EAAP,KAA0BC,EAA1B,KACA,EAAgD5D,mBAAS,IAAzD,mBAAO6D,EAAP,KAAyBC,EAAzB,KAEMvC,EAAe,SAACC,GAClB,MAAsBA,EAAMC,OAArBlC,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MAEC,SAAVA,GACA0D,EAAc,QACdF,EAAmB,cACnBI,GAAkB,IACF,WAAV5D,IACN0D,EAAc,UACdF,EAAmB,eACnBI,GAAkB,IAKT,cAATjE,EACAmE,EAAa9D,GACE,qBAATL,EACNuE,EAAoBlE,GACL,sBAATL,GACNqE,EAAqBhE,IAkCvBmE,EAAkB,WACpBlC,MAAO,mBAAoB,CACvBC,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB8B,IAAKlB,EACLjC,OAAQ4C,EACR1C,eAAgB4C,EAChB1C,WAAY4C,MAEjB1B,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GACHZ,QAAQC,IAAI,UAAWW,EAAK2B,yBAIpC,EAA4BjE,oBAAS,GAArC,mBAAOkE,EAAP,KAAeC,EAAf,KAQMC,EAAY,WAChBD,GAAU,IAGZ,OACI,qBAAK/E,UAAU,8BAAf,SACI,sBAAKA,UAAU,2BAA2BM,MAnG1B,CACpB,MAAS,QACT,cAAe,OACf,eAAgB,QAgGZ,UACI,sBAAKN,UAAU,yBAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,oBAAIA,UAAU,aAAd,SAA4Ba,IAC5B,qBAAKb,UAAU,YAAf,SACI,yBAAQA,UAAW,oBAClB+D,IACsB,SAAtBJ,EAA+B,aACT,WAAtBA,EAAiC,cAChC,gBACF,aAAW,yBAAyB1D,SAAUkC,EAL9C,UAMI,wBAAQ8C,UAAUtB,EAAlB,iCACA,wBAAQ3D,UAAU,gBAAgBQ,MAAM,OAAOyE,SAAgC,SAAtBtB,EAAzD,kBACA,wBAAQ3D,UAAU,gBAAgBQ,MAAM,SAASyE,SAAgC,WAAtBtB,EAA3D,oBACCQ,OAjErB1B,MAAO,gBAAiB,CACpBC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB8B,IAAKlB,EACL7C,YAAaA,EACbE,OAAQA,EACRU,OAAQmC,EACRjC,eAAgBmC,EAChBjC,WAAYgC,EACZI,WAAYA,MAEjBlB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAmDkC,aAI/C,sBAAKjD,UAAU,YAAf,UACI,mBAAGkF,KAAMnE,EAAQsB,OAAO,SAAS8C,IAAI,sBAArC,SAA4DpE,EAAS,gBAAkB,OACvF,uBACA,uBACA,8BAAI6C,EAAJ,IAAmB,uBAAM5D,UAAU,wCAAhB,eAA2D8D,EAA3D,KAAoFD,cAG/G,qBAAK7D,UAAU,oDAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOK,KAAK,OAAOL,UAAU,eAAeO,YAAY,aAAa,aAAW,aAAaJ,KAAK,YAAYK,MAAO6D,EAAWpE,SAAUkC,MAE9I,qBAAKnC,UAAU,WAAf,SACI,yBAAQA,UAAU,cAAcG,KAAK,oBAAoBK,MAAO+D,EAAmBtE,SAAUkC,EAA7F,UACI,wBAAQ8C,UAAQ,EAAhB,iBACA,wBAAQjF,UAAU,gBAAgBQ,MAAM,cAAxC,yBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,YAAxC,uBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,aAAxC,wBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,eAAxC,+BAGR,qBAAKR,UAAU,WAAf,SACI,uBAAOK,KAAK,OAAOL,UAAU,eAAeO,YAAY,OAAO,aAAW,OAAOJ,KAAK,mBAAmBK,MAAOiE,EAAkBxE,SAAUkC,MAEhJ,qBAAKnC,UAAU,SAAf,SACI,wBACIA,UAAU,qCACVK,KAAO,SACPG,MAAQ,gBACR4E,QAhHN,SAAChD,GAC/BA,EAAMmB,iBACNoB,IAGAL,EAAa,IACbI,EAAoB,IACpBF,EAAqB,KAqGW,kCAQZ,sBAAKxE,UAAU,gCAAf,UACI,wBAAQA,UAAU,MAAMoF,QAnElC,SAAChD,GACfA,EAAMmB,iBACNjB,QAAQC,IAAI,UACZwC,GAAU,IAgEc,qBACA,eAACM,EAAA,EAAD,CAAOC,KAAMR,EAAQS,KAAK,KAAKC,OAAQR,EAAWS,WAAW,OAAOC,UAAQ,EAA5E,UACI,cAACL,EAAA,EAAMM,OAAP,UACI,cAACN,EAAA,EAAMO,MAAP,UAAc/E,MAElB,cAACwE,EAAA,EAAMQ,KAAP,UACI,kTAMJ,eAACR,EAAA,EAAMS,OAAP,WACI,wBAAQV,QAASJ,EAAjB,oBACA,gEC1EzBe,MAzFf,WACI,MAAkCC,IAAMpF,SAAS,CAC7CqF,MAAO,EACP/C,KAAM,KAFV,mBAAOgD,EAAP,KAAkBC,EAAlB,KAIA,EAA8BH,IAAMpF,SAAS,GAA7C,mBAAOwF,EAAP,KAAgBC,EAAhB,KACA,EAAsCL,IAAMpF,SAAS,GAArD,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAA8CP,IAAMpF,SAAS,GAA7D,mBAAO4F,EAAP,KAAwBC,EAAxB,KACA,EAA8CT,IAAMpF,SAAS,GAA7D,mBAAO8F,EAAP,KAAwBC,EAAxB,KAuCA,OArCAX,IAAMY,WAAU,WACdnE,MAAM,YACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH,IAAM2D,EAAU3D,EAAK4D,aACfC,EAAc,GACpBF,EAAQG,SAAQ,SAACC,GACdF,EAAYG,KAAKD,MAEpBd,EAAa,CACTF,MAAOY,EAAQM,OACfjE,KAAM6D,OAIdtE,MAAM,uBACLM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHmD,EAAYnD,EAAKkE,aAAcD,WAEnC1E,MAAM,2BACLM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHqD,EAAgBrD,EAAKmE,iBAAkBF,WAE3C1E,MAAM,+BACLM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHuD,EAAoBvD,EAAKoE,qBAAsBH,WAEnD1E,MAAM,+BACLM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHyD,EAAoBzD,EAAKqE,qBAAsBJ,cAKnD,sBAAKnH,UAAU,YAAf,UACK,sBAAKA,UAAU,8CAAf,UACG,sBAAKA,UAAU,oBAAf,wBAA8C,uBAAK,4BAAIkG,EAAUD,MAAQC,EAAUD,MAAQ,SAC3F,sBAAKjG,UAAU,oBAAf,iBAAuC,uBAAK,4BAAIoG,GAAoB,SACpE,sBAAKpG,UAAU,oBAAf,qBAA2C,uBAAK,4BAAIsG,GAA4B,SAChF,sBAAKtG,UAAU,oBAAf,yBAA+C,uBAAK,4BAAIwG,GAAoC,SAC5F,sBAAKxG,UAAU,oBAAf,wBAA8C,uBAAK,4BAAI0G,GAAoC,YAE/F,sBAAK1G,UAAU,oCAAf,UAEI,qBAAKA,UAAU,QAUf,qBAAKA,UAAU,MAAf,SACKkG,EAAUhD,KAAKsE,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CACIpG,YAAeoG,EAAIpG,YACnBE,OAAUkG,EAAIlG,OACd6C,cAAiBqD,EAAIxF,OACrBqC,sBAAyBmD,EAAItF,eAC7BkC,qBAAwBoD,EAAIpF,WAC5B6B,SAAYuD,EAAIrC,IAChBjB,kBAAqBsD,EAAIhD,kBAIrC,qBAAKjE,UAAU,eC9ChByH,MA1Cf,YAAqE,IAApDC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,gBAE9C,OACQ,qBAAK5H,UAAU,wDAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyC0H,IACzC,wBAAQ1H,UAAU,sBAAsBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAjM,SACA,sBAAML,UAAU,0BAEhB,sBAAKA,UAAU,2CAA2CI,GAAG,yBAA7D,UACI,qBAAIJ,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,sBAAMA,UAAU,kCAAkC,eAAa,OAAOG,KAAK,aAAaC,GAAG,aAA3F,SAAyGuH,MAE7G,oBAAI3H,UAAU,WAAd,SACI,sBAAMA,UAAU,2BAA2BG,KAAK,aAAaC,GAAG,aAAhE,SAA8EwH,SAkBtF,sBAAM5H,UAAU,SAAhB,SACI,wBAAQA,UAAU,+BAA+BK,KAAK,SAAtD,gC,eCyBbwH,MAjDf,WACE,MAAwB7B,IAAMpF,SAAS,MAAvC,mBAAOsC,EAAP,KAAa4E,EAAb,KAEA9B,IAAMY,WAAU,WACdnE,MAAM,QACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU4E,EAAQ5E,EAAKE,eAGjC,IAAM2E,EAAY,CAChBC,OAAQ,OACRC,eAAgB,OAChBC,MAAO,SAGT,OACE,sBAAKlI,UAAU,kBAAf,UAEE,wBAAQA,UAAU,UAAlB,SACA,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CACE0H,eAAkB,cAAC,IAAD,CAAMS,GAAG,IAAI7H,MAAOyH,EAApB,6BAClBJ,gBAAmB,cAAC,IAAD,CAAMQ,GAAG,cAAc7H,MAAOyH,EAA9B,mBACnBH,gBAAmB,cAAC,IAAD,CAAMO,GAAG,cAAc7H,MAAOyH,EAA9B,qBAEvB,cAAC,IAAD,UACA,uBAAM/H,UAAU,4DAAhB,UACE,cAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,IAAlB,SACE,oBAAIrI,UAAU,cAAd,6CAEF,cAAC,IAAD,CAAOqI,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,kBAON,wBAAQrI,UAAU,eAAlB,SACE,mBAAGA,UAAU,0BAAb,SAA0CkD,GAAO,qBC3C1CoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9162bf3.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({className, onChange, onKeyPress, \r\n    name, id, type, style, placeholder, value, disabled, checked}) {\r\n    return <input \r\n    className = {className}\r\n    onChange = {onChange}\r\n    onKeyPress={onKeyPress}\r\n    name = {name} \r\n    id = {id}   \r\n    type = {type} \r\n    style = {style}\r\n    placeholder = {placeholder} \r\n    value = {value}\r\n    disabled = {disabled}\r\n    checked = {checked} //only use for checkbox type \r\n    ></input>\r\n}; \r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyPress: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    style: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool\r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/input\";\r\n\r\nfunction InsertPage() {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [jobURL, setJobURL] = useState(\"\");\r\n    const [checkNew, setCheckNew] = useState(false);\r\n    const [checkApplied, setCheckApplied] = useState(false);\r\n    const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n    const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n    const [status, setStatus] = useState(\"\");  \r\n    const [statusVerbiage, setStatusVerbiage] = useState(\"\");  \r\n    const [statusDate, setStatusDate] = useState(\"\");\r\n    const [disable, setDisable] = useState(false);\r\n    const [response, setResponse] = useState(\"\"); \r\n\r\n    function handleChange(event) {\r\n        const {value, name} = event.target; \r\n\r\n        switch (name){\r\n            case 'companyName':\r\n                setCompanyName(value);\r\n            break;\r\n            case 'jobURL':\r\n                setJobURL(value);\r\n            break;   \r\n            case 'new':\r\n                if (checkNew) {\r\n                    setCheckNew(false);\r\n                    //console.log(\"not checked\");\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckNew(true);\r\n                    //console.log(\"checked\");\r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Date to Apply\");\r\n                    setDisable(true);\r\n                }\r\n            break;  \r\n            case 'applied':\r\n                if (checkApplied) {\r\n                    setCheckApplied(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckApplied(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Applied Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'phoneCalled':\r\n                if (checkPhoneCalled) {\r\n                    setCheckPhoneCalled(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckPhoneCalled(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Phone Call Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'interviewed':\r\n                if (checkInterviewed) {\r\n                    setCheckInterviewed(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckInterviewed(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Interview Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'applyDate' :\r\n            case 'appliedDate': \r\n            case 'phoneCallDate': \r\n            case 'interviewDate':\r\n                setStatusDate(value);\r\n            break;                                                                    \r\n            default:\r\n                console.log(\"Unidentified input field found in the insertPage form\");\r\n        }\r\n    }    \r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();  \r\n        if (companyName === \"\" || jobURL === \"\" || status === \"\") {\r\n            setResponse({\r\n                verbiage: \"Missing field(s): please make sure all fields are filled out! Thanks!\",\r\n                textColor: \"text-danger\"\r\n            });\r\n        }else if (status) {\r\n            if (statusDate === \"\") {\r\n                setResponse({\r\n                    verbiage: \"Missing field: please make sure the Date is filled out! Thanks!\",\r\n                    textColor: \"text-danger\"\r\n                });                    \r\n            }else {\r\n                saveToDB(); \r\n            }\r\n        }else {\r\n            saveToDB();   \r\n        }\r\n    }\r\n\r\n    const saveToDB = () => {\r\n        fetch (\"/create\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },    \r\n            body: JSON.stringify({ \r\n                companyName: companyName,\r\n                jobURL: jobURL,\r\n                status: status,\r\n                statusVerbiage: statusVerbiage,\r\n                statusDate: statusDate\r\n            }) \r\n        }).then((res) => res.json())\r\n        .then((data) => {\r\n            // console.log(data.message);\r\n            setResponse({\r\n                 verbiage: data.message,\r\n                 textColor: \"text-success\"\r\n                });\r\n\r\n            //clear fields \r\n            setCompanyName(\"\");\r\n            setJobURL(\"\");\r\n            setStatus(\"\");\r\n            setStatusVerbiage(\"\");\r\n            setStatusDate(\"\");\r\n            setCheckNew(false);\r\n            setCheckApplied(false);\r\n            setCheckPhoneCalled(false);\r\n            setCheckInterviewed(false);\r\n            setDisable(false); \r\n        });        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Input Company Name */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-6 col-form-label text-end\">Company Name & Job Role</label>\r\n                    <div className=\"col-6\">\r\n                        <Input \r\n                            name = \"companyName\"\r\n                            type = \"text\" \r\n                            onChange = {handleChange}\r\n                            placeholder = \"Enter Name, Role\"\r\n                            value = {companyName}\r\n                        /> \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Post URL */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-6 col-form-label text-end\">Job Post URL</label>\r\n                    <div className=\"col-6\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Title */}\r\n                {/* <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Job Post URL</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>                 */}\r\n                {/*Checkbox Status - New, Applied, Phone-Called, Interviewed */}\r\n                <div className = \"column mt-4 mb-4 d-flex justify-content-center\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" name=\"new\" value=\"New\" onChange = {handleChange} disabled={status === \"New\" ? null : disable}  checked={checkNew ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox1\">New</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" name=\"applied\" value=\"Applied\" onChange = {handleChange} disabled={status === \"Applied\" ? null : disable} checked={checkApplied ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox2\">Applied</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" name=\"phoneCalled\" value=\"Phone Call\" onChange = {handleChange} disabled={status === \"Phone Call\" ? null : disable} checked={checkPhoneCalled ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox3\">Phone-Called</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" name=\"interviewed\" value=\"Interview\" onChange = {handleChange} disabled={status === \"Interview\" ? null : disable} checked={checkInterviewed ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox4\">Interviewed</label>\r\n                    </div>   \r\n                </div> \r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                {/* Checkbox Specific - New */}\r\n                    {checkNew ?                 \r\n                    <div className = \"row mb-3 d-flex justify-content-center\">\r\n                        <label className=\"col-sm-5 col-form-label\">{statusVerbiage}:</label>\r\n                        <div className=\"col-sm-5\">\r\n                            <Input \r\n                                name = \"applyDate\"\r\n                                type = \"date\"\r\n                                onChange = {handleChange}\r\n                                placeholder = \"Enter Date\"\r\n                                value = {statusDate}\r\n                            />   \r\n                        </div>\r\n                    </div> \r\n                    : null}\r\n                {/* Checkbox Specific - Applied */}\r\n                    {checkApplied ?                 \r\n                        <div className = \"row mb-3 d-flex justify-content-center\">\r\n                            <label className=\"col-sm-5 col-form-label\">{statusVerbiage}:</label>\r\n                            <div className=\"col-sm-5\">\r\n                                <Input \r\n                                    name = \"appliedDate\"\r\n                                    type = \"date\"\r\n                                    onChange = {handleChange}\r\n                                    placeholder = \"Enter Date\"\r\n                                    value = {statusDate}\r\n                                />   \r\n                            </div>\r\n                        </div> \r\n                    : null}                \r\n                {/* Checkbox Specific - Phone Called */}\r\n                    {checkPhoneCalled ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">{statusVerbiage}:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"phoneCallDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {statusDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                {/* Checkbox Specific - Interviewed */}    \r\n                    {checkInterviewed ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">{statusVerbiage}:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"interviewDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {statusDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                </div>\r\n                {/* Response - if submit successfully or not */}\r\n                { response ? \r\n                <div className=\"d-flex justify-content-center\">\r\n                    <p className={response.textColor + \" fw-normal fs-6\"}>{response.verbiage}</p>\r\n                </div> \r\n                : null}\r\n                {/* Submit Button - Add Job to Database */}\r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                    <Input\r\n                        type = \"submit\"\r\n                        value = \"Add Job\" \r\n                    />\r\n                </div>        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsertPage;","import {React, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction JobCard({jobAppId, companyName, jobURL, levelOfImportance, currentStatus, currentStatusSetDate, currentStatusVerbiage}) {\r\n    const cardWidthMargin = {\r\n        \"width\": \"800px\",\r\n        \"margin-left\": \"3rem\",\r\n        \"margin-right\": \"3rem\"\r\n      };\r\n\r\n    const [levelOfImpColor, setLevelOfImpColor] = useState(\"\"); \r\n    const [levelOfImp, setLevelOfImp] = useState(\"\");    \r\n    const [isLevelUpdated, SetIsLevelUpdated] = useState(false);\r\n    const [newStatus, setNewStatus] = useState(\"\");\r\n    const [newStatusVerbiage, setNewStatusVerbiage] = useState(\"\");\r\n    const [newStatusSetDate, setNewStatusSetDate] = useState(\"\");\r\n    \r\n    const handleChange = (event) => {  \r\n        const {name, value} = event.target; \r\n\r\n        if (value === \"High\") {\r\n            setLevelOfImp(\"High\");\r\n            setLevelOfImpColor(\"btn-danger\");\r\n            SetIsLevelUpdated(true);\r\n        }else if (value === \"Normal\") {\r\n            setLevelOfImp(\"Normal\")\r\n            setLevelOfImpColor(\"btn-primary\");\r\n            SetIsLevelUpdated(true);\r\n        }else {\r\n            // setLevelOfImpColor(\"btn-success\");\r\n        }\r\n\r\n        if (name === \"newStatus\") {\r\n            setNewStatus(value);\r\n        }else if (name === \"newStatusSetDate\") {\r\n            setNewStatusSetDate(value);\r\n        }else if (name === \"newStatusVerbiage\"){\r\n            setNewStatusVerbiage(value); \r\n        }\r\n    }\r\n\r\n    const handleUpdateStatusClicked = (event) => { \r\n        event.preventDefault();\r\n        updateJobStatus();\r\n\r\n        //clear fields\r\n        setNewStatus(\"\");\r\n        setNewStatusSetDate(\"\");\r\n        setNewStatusVerbiage(\"\"); \r\n    }\r\n\r\n    const updateJobImp = () => {\r\n            fetch (\"/updateJobImp\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },    \r\n                body: JSON.stringify({ \r\n                    _id: jobAppId,\r\n                    companyName: companyName,\r\n                    jobURL: jobURL,\r\n                    status: currentStatus,\r\n                    statusVerbiage: currentStatusVerbiage,\r\n                    statusDate: currentStatusSetDate,\r\n                    levelOfImp: levelOfImp\r\n                }) \r\n            }).then((res) => res.json())\r\n            // .then((data) => { //uncomment if additional customization needed \r\n            // }); \r\n    }\r\n\r\n    const updateJobStatus = () => {\r\n        fetch (\"/updateJobStatus\", {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },    \r\n            body: JSON.stringify({ \r\n                _id: jobAppId,\r\n                status: newStatus,\r\n                statusVerbiage: newStatusVerbiage,\r\n                statusDate: newStatusSetDate\r\n            }) \r\n        }).then((res) => res.json())\r\n        .then((data) => { //uncomment if additional customization needed \r\n            console.log(\"SUCCESS\", data.updatedJobAppStatus);\r\n        }); \r\n    }\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const showModal = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"click!\");\r\n        setIsOpen(true);\r\n    };\r\n  \r\n    const hideModal = () => {\r\n      setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-left\">\r\n            <div className=\"card border-success mb-3\" style={cardWidthMargin}>\r\n                <div className=\"card-body text-success\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5 className=\"card-title\">{companyName}</h5>\r\n                        <div className=\"btn-group\">\r\n                            <select className={\"form-select btn \" + \r\n                            (levelOfImpColor ? levelOfImpColor \r\n                            :levelOfImportance === \"High\" ? \"btn-danger\"\r\n                            :levelOfImportance === \"Normal\" ? \"btn-primary\"\r\n                            : \"btn-success\")} \r\n                            aria-label=\"Default select example\" onChange={handleChange}>\r\n                                <option selected={levelOfImportance ? false : true}>Level of Importance</option>\r\n                                <option className=\"dropdown-item\" value=\"High\" selected={levelOfImportance === \"High\" ? true : false}>High</option>\r\n                                <option className=\"dropdown-item\" value=\"Normal\" selected={levelOfImportance === \"Normal\" ? true : false}>Normal</option>\r\n                                {isLevelUpdated ? updateJobImp() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        <a href={jobURL} target=\"_blank\" rel=\"noopener noreferrer\">{jobURL ? \"Job Site Here\" : null}</a>\r\n                        <br />\r\n                        <br />\r\n                        <p>{currentStatus} <span className=\"text-black-50 fw-light font-monospace\">- {currentStatusVerbiage}: {currentStatusSetDate}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent border-success m-0 p-1\">\r\n                    <div className=\"container\">\r\n                        <div className=\"d-flex row justify-content-between\">\r\n                            <div className=\"col-10\">\r\n                                <div className=\"row g-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"New Status\" aria-label=\"New Status\" name=\"newStatus\" value={newStatus} onChange={handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <select className=\"form-select\" name=\"newStatusVerbiage\" value={newStatusVerbiage} onChange={handleChange}>\r\n                                            <option selected>...</option>\r\n                                            <option className=\"dropdown-item\" value=\"Schedule on\">Schedule on</option>\r\n                                            <option className=\"dropdown-item\" value=\"Submit by\">Submit by</option>\r\n                                            <option className=\"dropdown-item\" value=\"applied on\">applied on</option>\r\n                                            <option className=\"dropdown-item\" value=\"Completed on\">Completed on</option>\r\n                                        </select>\r\n                                    </div>  \r\n                                    <div className=\"col-sm-3\">\r\n                                        <input type=\"date\" className=\"form-control\" placeholder=\"Date\" aria-label=\"Date\" name=\"newStatusSetDate\" value={newStatusSetDate} onChange={handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        <button\r\n                                            className=\"btn btn-outline-secondary border-0\"\r\n                                            type = \"submit\"\r\n                                            value = \"Update Status\" \r\n                                            onClick = {handleUpdateStatusClicked}>Update Status</button>       \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-2 d-flex flex-row-reverse\">\r\n                                <button className=\"btn\" onClick={showModal}>Details</button>\r\n                                <Modal show={isOpen} size=\"xl\" onHide={hideModal} scrollable=\"true\" centered>\r\n                                    <Modal.Header>\r\n                                        <Modal.Title>{companyName}</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>        \r\n                                        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n                                        dcvntras mssdattis ertgconsectetur drcvbpurus sitwef aw3famet fermentumdrtf. Qefxras justo eeodio,\r\n                                        dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n                                        consectetur ac, vestibulum at eros.\r\n                                        </p>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <button onClick={hideModal}>Cancel</button>\r\n                                        <button>Save</button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobCard;","import React from \"react\";\r\nimport JobCard from \"./JobCard\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nfunction TrackPage() {\r\n    const [totalJobs, setTotalJobs] = React.useState({\r\n        count: 0,\r\n        data: []\r\n    });\r\n    const [newJobs, setNewJobs] = React.useState(0);\r\n    const [appliedJobs, setAppliedJobs] = React.useState(0);\r\n    const [phoneCalledJobs, setPhoneCalledJobs] = React.useState(0);\r\n    const [interviewedJobs, setInterviewedJobs] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n      fetch(\"/findAll\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            const allJobs = data.foundAllJobs;\r\n            const allJobsCopy = []\r\n            allJobs.forEach((job) => {\r\n               allJobsCopy.push(job); \r\n            });\r\n            setTotalJobs({\r\n                count: allJobs.length,\r\n                data: allJobsCopy\r\n            });\r\n        });  \r\n\r\n        fetch(\"/findAll/status/new\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setNewJobs((data.foundNewJobs).length)\r\n        });  \r\n        fetch(\"/findAll/status/applied\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setAppliedJobs((data.foundAppliedJobs).length)\r\n        });   \r\n        fetch(\"/findAll/status/phoneCalled\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setPhoneCalledJobs((data.foundPhoneCalledJobs).length)\r\n        });\r\n        fetch(\"/findAll/status/interviewed\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setInterviewedJobs((data.foundInterviewedJobs).length)\r\n        });        \r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n             <div className=\"row d-flex justify-content-center mb-5 mt-4\">\r\n                <div className=\"col-2 text-center\">Total Jobs <br/><p>{totalJobs.count ? totalJobs.count : \"0\"}</p></div>\r\n                <div className=\"col-2 text-center\">New <br/><p>{newJobs ? newJobs : \"0\"}</p></div>   \r\n                <div className=\"col-2 text-center\">Applied <br/><p>{appliedJobs ? appliedJobs : \"0\"}</p></div>  \r\n                <div className=\"col-2 text-center\">Phone Calls <br/><p>{phoneCalledJobs ? phoneCalledJobs : \"0\"}</p></div>  \r\n                <div className=\"col-2 text-center\">Interviews <br/><p>{interviewedJobs ? interviewedJobs : \"0\"}</p></div>   \r\n            </div>    \r\n            <div className=\"row d-flex justify-content-center\">\r\n                {/* JobBar -- TODO: using map() method to display all jobs */}\r\n                <div className=\"col\">\r\n                    {/* Sample Job Card */}\r\n                    {/* <JobCard \r\n                        companyName=\"Facebook\" \r\n                        jobURL = \"https://www.facebook.com/careers/v2/jobs/2948019165525651/\" \r\n                        currentStatus = \"New\"\r\n                        currentStatusVerbiage = \"Date to Apply\"\r\n                        currentStatusSetDate = \"09/18/21\"\r\n                        />                     */}   \r\n                </div>\r\n                <div className=\"col\">\r\n                    {totalJobs.data.map((job) => (\r\n                        <JobCard \r\n                            companyName = {job.companyName}\r\n                            jobURL = {job.jobURL}\r\n                            currentStatus = {job.status}\r\n                            currentStatusVerbiage = {job.statusVerbiage}\r\n                            currentStatusSetDate = {job.statusDate}\r\n                            jobAppId = {job._id}\r\n                            levelOfImportance = {job.levelOfImp}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"col\">\r\n                \r\n                </div>\r\n            </div>      \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrackPage;","import React from \"react\"; \r\n\r\nfunction Navbar({RouterLinkHome, RouterLinkEnter, RouterLinkTrack}) {\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <span className=\"navbar-brand p-2 mx-2\">{RouterLinkHome}</span>\r\n                    <button className=\"navbar-toggler mx-5\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse mx-4 text-light\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link active text-light mx-2\" aria-current=\"page\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkEnter}</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link text-light mx-2\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkTrack}</span>\r\n                            </li>\r\n                            {/* Dropdown Option */}\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/track-jobs\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Track\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/track-jobs/general\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <button className=\"btn btn-outline-success mx-4\" type=\"submit\">Sign On</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    );\r\n}; \r\n\r\nexport default Navbar;","import React from \"react\";\nimport './App.css';\nimport InsertPage from \"./components/DataInsert/InsertPage\";\nimport TrackPage from \"./components/Dashboard/TrackPage\";\nimport Navbar from \"./components/UI/navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())  \n      .then((data) => setData(data.message));  \n  });\n\n  const linkStyle = {\n    margin: \"0rem\",\n    textDecoration: \"none\",\n    color: 'white'\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      \n      <header className=\"row m-5\">\n      <Router>\n        <div>\n          <Navbar\n            RouterLinkHome = {<Link to=\"/\" style={linkStyle}>JXT Job Tracker</Link>}\n            RouterLinkEnter = {<Link to=\"/enter-page\" style={linkStyle}>Enter</Link>}\n            RouterLinkTrack = {<Link to=\"/track-page\" style={linkStyle}>Track</Link>}\n          />\n        <Switch>\n        <body className=\"row d-flex justify-content-center align-items-center mt-5\">\n          <Route exact path=\"/\">\n            <h1 className=\"text-center\">Welcome to JXT Job Track App!</h1>\n          </Route>\n          <Route path=\"/enter-page\">\n            <InsertPage />\n          </Route>\n          <Route path=\"/track-page\">\n            <TrackPage />\n          </Route>\n          </body>\n        </Switch>\n        </div>\n      </Router>\n      </header>\n      <footer className=\"fixed-bottom\">\n        <p className=\"cpText text-center mt-5\">{ !data ? \"Loading...\" : data }</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}