{"version":3,"sources":["components/UI/input.jsx","components/UI/submitButton.jsx","components/Authentication/DummySignUpForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","onChange","onKeyPress","name","type","style","placeholder","value","SubmitButton","props","className","onClick","text","DummySignUpForm","useState","username","setUsername","password","setPassword","handleChange","event","target","action","method","preventDefault","console","log","App","React","data","setData","useEffect","fetch","then","res","json","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAyBeA,MAtBf,YAC6C,IAD7BC,EAC4B,EAD5BA,SAAUC,EACkB,EADlBA,WACtBC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,MAChC,OAAO,uBACPN,SAAYA,EACZC,WAAYA,EACZC,KAAQA,EACRC,KAAQA,EACRC,MAASA,EACTC,YAAeA,EACfC,MAASA,KCAEC,MAVf,SAAsBC,GAClB,OAAO,wBACPL,KAAMK,EAAML,KACZD,KAAMM,EAAMN,KACZE,MAAOI,EAAMJ,MACbK,UAAWD,EAAMC,UACjBH,MAASE,EAAMF,MACfI,QAASF,EAAME,QANR,SAMkBF,EAAMG,QCwDpBC,MA7Df,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArBd,EAAP,EAAOA,MAEM,aAFb,EAAcJ,KAGVa,EAAYT,GAEZW,EAAYX,GAUpB,OACI,qBAAKG,UAAY,4CAAjB,SACI,uBAAMY,OAAO,UAAUC,OAAO,OAA9B,UACI,sBAAKb,UAAY,yCAAjB,UACI,uBAAOA,UAAU,0BAAjB,sBACA,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIP,KAAO,WACPC,KAAO,OACPH,SAAYkB,EACZb,YAAc,WACdC,MAASQ,SAIrB,sBAAKL,UAAY,yCAAjB,UACI,uBAAOA,UAAU,0BAAjB,sBACA,qBAAKA,UAAU,WAAf,SACA,cAAC,EAAD,CACIP,KAAO,WACPC,KAAO,WACPH,SAAYkB,EACZb,YAAc,WACdC,MAASU,SAIjB,qBAAKP,UAAU,0CAAf,SACI,cAAC,EAAD,CACIP,KAAO,SACPC,KAAO,SACPQ,KAAO,UACPD,QAtCpB,SAAqBS,GACjBA,EAAMI,iBACNC,QAAQC,IAAI,oBACZD,QAAQC,IAAI,aAAeX,EAAU,aAAeE,IAoCpCP,UAAY,4BClBrBiB,MAlCf,WACE,MAAwBC,IAAMd,SAAS,MAAvC,mBAAOe,EAAP,KAAaC,EAAb,KAiBA,OAdAF,IAAMG,WAAU,WACdC,MAAM,QACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GAAD,OAAUC,EAAQD,EAAKO,eAY/B,sBAAK1B,UAAU,kBAAf,UACE,wBAAQA,UAAU,UAAlB,SACE,oBAAIA,UAAU,cAAd,4CAEF,sBAAMA,UAAU,uDAAhB,SACA,cAAC,EAAD,MAGA,iCACE,mBAAGA,UAAU,0BAAb,SAA0CmB,GAAO,qBCrB1CQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.526969b9.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({onChange, onKeyPress, \r\n    name, type, style, placeholder, value}) {\r\n    return <input \r\n    onChange = {onChange}\r\n    onKeyPress={onKeyPress}\r\n    name = {name}    \r\n    type = {type} \r\n    style = {style}\r\n    placeholder = {placeholder} \r\n    value = {value}></input>\r\n}; \r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyPress: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    style: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Input;","import React from \"react\"; \r\n\r\nfunction SubmitButton(props) {\r\n    return <button \r\n    type={props.type} \r\n    name={props.name} \r\n    style={props.style}\r\n    className={props.className}\r\n    value = {props.value}\r\n    onClick={props.onClick}>{props.text}</button>\r\n}\r\n\r\nexport default SubmitButton;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/input\";\r\nimport SubmitButton from \"../UI/submitButton\";\r\n\r\nfunction DummySignUpForm() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        const {value, name} = event.target; \r\n\r\n        if (name === \"username\"){\r\n            setUsername(value);\r\n        }else {\r\n            setPassword(value);\r\n        }  \r\n    }\r\n\r\n    function handleClick(event){\r\n        event.preventDefault();\r\n        console.log(\"This is clicked!\");\r\n        console.log(\"username: \" + username, \"password: \" + password);\r\n    }\r\n\r\n    return (\r\n        <div className = \"d-flex flex-column justify-content-center\">\r\n            <form action=\"/create\" method=\"POST\">\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-2\">\r\n                        <Input \r\n                            name = \"username\"\r\n                            type = \"text\" \r\n                            onChange = {handleChange}\r\n                            placeholder = \"username\"\r\n                            value = {username}\r\n                        /> \r\n                    </div>\r\n                </div>\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <Input \r\n                        name = \"password\"\r\n                        type = \"password\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"password\"\r\n                        value = {password}\r\n                    />   \r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                    <SubmitButton\r\n                        name = \"submit\"\r\n                        type = \"submit\"\r\n                        text = \"Sign In\"\r\n                        onClick = {handleClick}\r\n                        className = \"btn btn-primary\"\r\n                    />      \r\n                </div>        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DummySignUpForm;","import React from \"react\";\nimport './App.css';\nimport DummySignUpForm from \"./components/Authentication/DummySignUpForm\";\n// import SuccessSignInPage from \"./components/Experiments/2_successEnterPage\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n  // const [signIn, setSignIn] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())  \n      .then((data) => setData(data.message));  \n\n    // fetch(\"/sign-in\")\n    //   .then((res) => res.json())  \n    //   .then((data) => {\n    //     if (data.message === \"success\"){\n    //       setSignIn(true); \n    //     }\n      // });  \n  });\n\n  return (\n    <div className=\"container-fluid\">\n      <header className=\"row m-5\">\n        <h1 className=\"text-center\">Welcome to JXT Job Track App</h1>\n      </header>\n      <body className=\"row d-flex justify-content-center align-items-center\">\n      <DummySignUpForm />\n        {/* {!signIn ? <DummySignUpForm />: <SuccessSignInPage />} */}\n      </body>\n      <footer>\n        <p className=\"cpText text-center mt-5\">{ !data ? \"Loading...\" : data }</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}