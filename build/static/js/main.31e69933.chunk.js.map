{"version":3,"sources":["components/UI/input.jsx","components/DataInsert/InsertPage.jsx","components/Dashboard/JobCard.jsx","components/Dashboard/TrackPage.jsx","components/UI/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","className","onChange","onKeyPress","name","id","type","style","placeholder","value","disabled","checked","InsertPage","useState","companyName","setCompanyName","jobURL","setJobURL","checkNew","setCheckNew","checkApplied","setCheckApplied","checkPhoneCalled","setCheckPhoneCalled","checkInterviewed","setCheckInterviewed","status","setStatus","statusVerbiage","setStatusVerbiage","statusDate","setStatusDate","disable","setDisable","response","setResponse","handleChange","event","target","console","log","saveToDB","fetch","method","headers","body","JSON","stringify","levelOfImp","levelOfImpOrderNum","then","res","json","data","verbiage","message","textColor","onSubmit","preventDefault","for","JobCard","jobAppId","levelOfImportance","currentStatus","currentStatusSetDate","currentStatusVerbiage","savedNotes","levelOfImpColor","setLevelOfImpColor","setLevelOfImp","setlevelOfImpOrderNum","isLevelUpdated","SetIsLevelUpdated","newStatus","setNewStatus","newStatusVerbiage","setNewStatusVerbiage","newStatusSetDate","setNewStatusSetDate","notesOnChange","setNotesOnChange","isNotesUpdated","setIsNotesUpdated","updateJobStatus","_id","isOpen","setIsOpen","hideModal","selected","href","rel","onClick","Modal","show","size","onHide","scrollable","centered","Header","Title","Body","rows","foundSavedNotes","Footer","TrackPage","count","totalJobs","setTotalJobs","newJobs","setNewJobs","appliedJobs","setAppliedJobs","phoneCalledJobs","setPhoneCalledJobs","interviewedJobs","setInterviewedJobs","useEffect","allJobs","foundAllJobs","allJobsTemp","forEach","job","push","length","foundNewJobs","foundAppliedJobs","foundPhoneCalledJobs","foundInterviewedJobs","sort","a","b","map","Navbar","RouterLinkHome","RouterLinkEnter","RouterLinkTrack","App","setData","linkStyle","margin","textDecoration","color","to","exact","path","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAiCeA,MA9Bf,YACoE,IADpDC,EACmD,EADnDA,UAAWC,EACwC,EADxCA,SAAUC,EAC8B,EAD9BA,WACjCC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QACrD,OAAO,uBACPV,UAAaA,EACbC,SAAYA,EACZC,WAAYA,EACZC,KAAQA,EACRC,GAAMA,EACNC,KAAQA,EACRC,MAASA,EACTC,YAAeA,EACfC,MAASA,EACTC,SAAYA,EACZC,QAAWA,KC8QAC,MA3Rf,WACI,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgDR,oBAAS,GAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAAgDV,oBAAS,GAAzD,mBAAOW,EAAP,KAAyBC,EAAzB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAA4Cd,mBAAS,IAArD,mBAAOe,EAAP,KAAuBC,EAAvB,KACA,EAAoChB,mBAAS,IAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAA8BlB,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArB7B,EAAP,EAAOA,MAEP,OAFA,EAAcL,MAGV,IAAK,cACDW,EAAeN,GACnB,MACA,IAAK,SACDQ,EAAUR,GACd,MACA,IAAK,MACGS,GACAC,GAAY,GAEZQ,EAAU,IACVM,GAAW,KAEXd,GAAY,GAEZQ,EAAUlB,GACVoB,EAAkB,iBAClBI,GAAW,IAEnB,MACA,IAAK,UACGb,GACAC,GAAgB,GAChBM,EAAU,IACVM,GAAW,KAEXZ,GAAgB,GAChBM,EAAUlB,GACVoB,EAAkB,gBAClBI,GAAW,IAEnB,MACA,IAAK,cACGX,GACAC,GAAoB,GACpBI,EAAU,IACVM,GAAW,KAEXV,GAAoB,GACpBI,EAAUlB,GACVoB,EAAkB,mBAClBI,GAAW,IAEnB,MACA,IAAK,cACGT,GACAC,GAAoB,GACpBE,EAAU,IACVM,GAAW,KAEXR,GAAoB,GACpBE,EAAUlB,GACVoB,EAAkB,kBAClBI,GAAW,IAEnB,MACA,IAAK,YACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACDF,EAActB,GAClB,MACA,QACI8B,QAAQC,IAAI,0DAyBxB,IAAMC,EAAW,WACbC,MAAO,UAAW,CACdC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBjC,YAAaA,EACbE,OAAQA,EACRU,OAAQA,EACRE,eAAgBA,EAChBE,WAAYA,EACZkB,WAAY,GACZC,mBAAoB,MAEzBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GAEHlB,EAAY,CACPmB,SAAUD,EAAKE,QACfC,UAAW,iBAIhBzC,EAAe,IACfE,EAAU,IACVU,EAAU,IACVE,EAAkB,IAClBE,EAAc,IACdZ,GAAY,GACZE,GAAgB,GAChBE,GAAoB,GACpBE,GAAoB,GACpBQ,GAAW,OAInB,OACI,8BACI,uBAAMwB,SA5Dd,SAAsBpB,GAClBA,EAAMqB,iBACc,KAAhB5C,GAAiC,KAAXE,GAA4B,KAAXU,EACvCS,EAAY,CACRmB,SAAU,wEACVE,UAAW,gBAET9B,GACa,KAAfI,EACAK,EAAY,CACRmB,SAAU,kEACVE,UAAW,gBAMnBf,KA2CA,UAEI,sBAAKxC,UAAY,yCAAjB,UACI,uBAAOA,UAAU,gCAAjB,qCACA,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CACIG,KAAO,cACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,mBACdC,MAASK,SAKrB,sBAAKb,UAAY,yCAAjB,UACI,uBAAOA,UAAU,gCAAjB,0BACA,qBAAKA,UAAU,QAAf,SACA,cAAC,EAAD,CACIG,KAAO,SACPE,KAAO,MACPJ,SAAYkC,EACZ5B,YAAc,YACdC,MAASO,SAkBjB,sBAAKf,UAAY,iDAAjB,UACI,sBAAKA,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,MAAMK,MAAM,MAAMP,SAAYkC,EAAc1B,SAAqB,QAAXgB,EAAmB,KAAOM,EAAUrB,UAASO,IACjL,uBAAOjB,UAAU,mBAAmB0D,IAAI,kBAAxC,oBAEJ,sBAAK1D,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,UAAUK,MAAM,UAAUP,SAAYkC,EAAc1B,SAAqB,YAAXgB,EAAuB,KAAOM,EAASrB,UAASS,IAC5L,uBAAOnB,UAAU,mBAAmB0D,IAAI,kBAAxC,wBAEJ,sBAAK1D,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,cAAcK,MAAM,aAAaP,SAAYkC,EAAc1B,SAAqB,eAAXgB,EAA0B,KAAOM,EAASrB,UAASW,IACtM,uBAAOrB,UAAU,mBAAmB0D,IAAI,kBAAxC,6BAEJ,sBAAK1D,UAAU,+BAAf,UACI,cAAC,EAAD,CAAOA,UAAU,mBAAmBK,KAAK,WAAWD,GAAG,kBAAkBD,KAAK,cAAcK,MAAM,YAAYP,SAAYkC,EAAc1B,SAAqB,cAAXgB,EAAyB,KAAOM,EAASrB,UAASa,IACpM,uBAAOvB,UAAU,mBAAmB0D,IAAI,kBAAxC,+BAGR,sBAAK1D,UAAU,0CAAf,UAEKiB,EACD,sBAAKjB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,YACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAInB,KAEDV,EACG,sBAAKnB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,cACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAIvB,KAEDR,EACO,sBAAKrB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,gBACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAI3B,KAEDN,EACO,sBAAKvB,UAAY,yCAAjB,UACI,wBAAOA,UAAU,0BAAjB,UAA4C2B,EAA5C,OACA,qBAAK3B,UAAU,WAAf,SACI,cAAC,EAAD,CACIG,KAAO,gBACPE,KAAO,OACPJ,SAAYkC,EACZ5B,YAAc,aACdC,MAASqB,SAI3B,QAGJI,EACF,qBAAKjC,UAAU,gCAAf,SACI,mBAAGA,UAAWiC,EAASsB,UAAY,kBAAnC,SAAuDtB,EAASoB,aAElE,KAEF,qBAAKrD,UAAU,0CAAf,SACI,cAAC,EAAD,CACIK,KAAO,SACPG,MAAQ,oB,QChEjBmD,MAnNf,YAA8I,IAA5HC,EAA2H,EAA3HA,SAAU/C,EAAiH,EAAjHA,YAAaE,EAAoG,EAApGA,OAAQ8C,EAA4F,EAA5FA,kBAAmBC,EAAyE,EAAzEA,cAAeC,EAA0D,EAA1DA,qBAAsBC,EAAoC,EAApCA,sBAAuBC,EAAa,EAAbA,WAO5H,EAA8CrD,mBAAS,IAAvD,mBAAOsD,EAAP,KAAwBC,EAAxB,KACA,EAAoCvD,mBAAS,IAA7C,mBAAOmC,EAAP,KAAmBqB,EAAnB,KACA,EAAoDxD,mBAAS,GAA7D,mBAAOoC,EAAP,KAA2BqB,EAA3B,KACA,EAA4CzD,oBAAS,GAArD,mBAAO0D,EAAP,KAAuBC,EAAvB,KACA,EAAkC3D,mBAAS,IAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAkD7D,mBAAS,IAA3D,mBAAO8D,EAAP,KAA0BC,EAA1B,KACA,EAAgD/D,mBAAS,IAAzD,mBAAOgE,EAAP,KAAyBC,EAAzB,KACA,EAA0CjE,mBAAS,IAAnD,mBAAOkE,EAAP,KAAsBC,EAAtB,KACA,EAA4CnE,oBAAS,GAArD,mBAAOoE,EAAP,KAAuBC,EAAvB,KAEM9C,EAAe,SAACC,GAClB,MAAsBA,EAAMC,OAArBlC,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MAEC,SAAVA,GACA4D,EAAc,QACdC,EAAsB,GACtBF,EAAmB,cACnBI,GAAkB,IACF,WAAV/D,IACN4D,EAAc,UACdC,EAAsB,GACtBF,EAAmB,eACnBI,GAAkB,IAGT,cAATpE,EACAsE,EAAajE,GACE,qBAATL,EACN0E,EAAoBrE,GACL,sBAATL,GACNwE,EAAqBnE,IAsCvB0E,EAAkB,WACpBzC,MAAO,mBAAoB,CACvBC,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBqC,IAAKvB,EACLnC,OAAQ+C,EACR7C,eAAgB+C,EAChB7C,WAAY+C,MAEjB3B,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,QAqBX,EAA4BxC,oBAAS,GAArC,mBAAOwE,EAAP,KAAeC,GAAf,KAWMC,GAAY,WAChBD,IAAU,IAGZ,OACI,qBAAKrF,UAAU,8BAAf,SACI,sBAAKA,UAAU,2BAA2BM,MA7H1B,CACpB,MAAS,QACT,cAAe,OACf,eAAgB,QA0HZ,UACI,sBAAKN,UAAU,yBAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,oBAAIA,UAAU,aAAd,SAA4Ba,IAC5B,qBAAKb,UAAU,YAAf,SACI,yBAAQA,UAAW,oBAClBkE,IACsB,SAAtBL,EAA+B,aACT,WAAtBA,EAAiC,cAChC,gBACF,aAAW,yBAAyB5D,SAAUkC,EAL9C,UAMI,wBAAQoD,UAAU1B,EAAlB,iCACA,wBAAQ7D,UAAU,gBAAgBQ,MAAM,OAAO+E,SAAgC,SAAtB1B,EAAzD,kBACA,wBAAQ7D,UAAU,gBAAgBQ,MAAM,SAAS+E,SAAgC,WAAtB1B,EAA3D,4BAIZ,sBAAK7D,UAAU,YAAf,UACI,mBAAGwF,KAAMzE,EAAQsB,OAAO,SAASoD,IAAI,sBAArC,SAA4D1E,EAAS,gBAAkB,OACvF,uBACA,uBACA,8BAAI+C,EAAJ,IAAmB,uBAAM9D,UAAU,wCAAhB,eAA2DgE,EAA3D,KAAoFD,cAG/G,qBAAK/D,UAAU,oDAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOK,KAAK,OAAOL,UAAU,eAAeO,YAAY,aAAa,aAAW,aAAaJ,KAAK,YAAYK,MAAOgE,EAAWvE,SAAUkC,MAE9I,qBAAKnC,UAAU,WAAf,SACI,yBAAQA,UAAU,cAAcG,KAAK,oBAAoBK,MAAOkE,EAAmBzE,SAAUkC,EAA7F,UACI,wBAAQoD,UAAQ,EAAhB,iBACA,wBAAQvF,UAAU,gBAAgBQ,MAAM,cAAxC,yBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,YAAxC,uBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,aAAxC,wBACA,wBAAQR,UAAU,gBAAgBQ,MAAM,eAAxC,+BAGR,qBAAKR,UAAU,WAAf,SACI,uBAAOK,KAAK,OAAOL,UAAU,eAAeO,YAAY,OAAO,aAAW,OAAOJ,KAAK,mBAAmBK,MAAOoE,EAAkB3E,SAAUkC,MAEhJ,qBAAKnC,UAAU,SAAf,SACI,wBACIA,UAAU,qCACVK,KAAO,SACPG,MAAQ,gBACRkF,QA9HN,SAACtD,GAC/BA,EAAMqB,iBACNyB,IAGAT,EAAa,IACbI,EAAoB,IACpBF,EAAqB,KAmHW,kCAQXL,OAvHjB7B,MAAO,gBAAiB,CACpBC,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBqC,IAAKvB,EACLb,WAAYA,EACZC,mBAAoBA,MAEzBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UA6G8B,KACnC,sBAAKnD,UAAU,gCAAf,UACI,wBAAQA,UAAU,MAAM0F,QAtElC,SAACtD,GACfA,EAAMqB,iBACNnB,QAAQC,IAAI,UACZ8C,IAAU,GACNpB,GACAc,EAAiBd,IAiEG,qBACA,eAAC0B,EAAA,EAAD,CAAOC,KAAMR,EAAQS,KAAK,KAAKC,OAAQR,GAAWS,WAAW,OAAOC,UAAQ,EAA5E,UACI,cAACL,EAAA,EAAMM,OAAP,UACI,cAACN,EAAA,EAAMO,MAAP,UAAcrF,MAElB,eAAC8E,EAAA,EAAMQ,KAAP,WACI,gTAKA,sBAAKnG,UAAU,OAAf,UACI,uBAAO0D,IAAI,qBAAqB1D,UAAU,aAA1C,mBACA,0BAAUA,UAAU,eAAeI,GAAG,qBAAqBgG,KAAK,KAAK5F,MAAOsE,EAAe7E,SAvJzG,SAACmC,GACvB,IAAM5B,EAAQ4B,EAAMC,OAAO7B,MAC3BuE,EAAiBvE,GACjByE,GAAkB,SAsJeD,OAtGjCvC,MAAO,aAAc,CACjBC,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBqC,IAAKvB,EACLK,WAAYa,MAEjB7B,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GACHd,QAAQC,IAAI,UAAWa,EAAKiD,oBA2FsC,QAE1C,cAACV,EAAA,EAAMW,OAAP,UACI,wBAAQZ,QAASJ,GAAjB,wCCvGzBiB,MAhGf,WACI,MAAkC3F,mBAAS,CACvC4F,MAAO,EACPpD,KAAM,KAFV,mBAAOqD,EAAP,KAAkBC,EAAlB,KAIA,EAA8B9F,mBAAS,GAAvC,mBAAO+F,EAAP,KAAgBC,EAAhB,KACA,EAAsChG,mBAAS,GAA/C,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAA8ClG,mBAAS,GAAvD,mBAAOmG,EAAP,KAAwBC,EAAxB,KACA,EAA8CpG,mBAAS,GAAvD,mBAAOqG,EAAP,KAAwBC,EAAxB,KAgDA,OA9CAC,qBAAU,WACR1E,MAAM,YACHQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH,IAAMgE,EAAUhE,EAAKiE,aACfC,EAAc,GAEpBF,EAAQG,SAAQ,SAACC,GACdF,EAAYG,KAAKD,MAGpBd,EAAa,CACTF,MAAOY,EAAQM,OACftE,KAAMkE,OAId7E,MAAM,uBACLQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHwD,EAAYxD,EAAKuE,aAAcD,WAEnCjF,MAAM,2BACLQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH0D,EAAgB1D,EAAKwE,iBAAkBF,WAE3CjF,MAAM,+BACLQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH4D,EAAoB5D,EAAKyE,qBAAsBH,WAEnDjF,MAAM,+BACLQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH8D,EAAoB9D,EAAK0E,qBAAsBJ,cAYnD,sBAAK1H,UAAU,YAAf,UACK,sBAAKA,UAAU,8CAAf,UACG,sBAAKA,UAAU,oBAAf,wBAA8C,uBAAK,4BAAIyG,EAAUD,MAAQC,EAAUD,MAAQ,SAC3F,sBAAKxG,UAAU,oBAAf,iBAAuC,uBAAK,4BAAI2G,GAAoB,SACpE,sBAAK3G,UAAU,oBAAf,qBAA2C,uBAAK,4BAAI6G,GAA4B,SAChF,sBAAK7G,UAAU,oBAAf,yBAA+C,uBAAK,4BAAI+G,GAAoC,SAC5F,sBAAK/G,UAAU,oBAAf,wBAA8C,uBAAK,4BAAIiH,GAAoC,YAE/F,qBAAKjH,UAAU,oCAAf,SASI,qBAAKA,UAAU,MAAf,SACCyG,EAAUrD,KAAK2E,MAAK,SAACC,EAAGC,GACrB,OAAOD,EAAEhF,mBAAqBiF,EAAEjF,sBACjCkF,KAAI,SAACV,GAAD,OACC,cAAC,EAAD,CAEI3G,YAAe2G,EAAI3G,YACnBE,OAAUyG,EAAIzG,OACd+C,cAAiB0D,EAAI/F,OACrBuC,sBAAyBwD,EAAI7F,eAC7BoC,qBAAwByD,EAAI3F,WAC5B+B,SAAY4D,EAAIrC,IAChBtB,kBAAqB2D,EAAIzE,WACzBkB,WAAcuD,EAAIvD,YARXuD,EAAIrC,gBCtCxBgD,MA1Cf,YAAqE,IAApDC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,gBAE9C,OACQ,qBAAKtI,UAAU,wDAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCoI,IACzC,wBAAQpI,UAAU,sBAAsBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAjM,SACA,sBAAML,UAAU,0BAEhB,sBAAKA,UAAU,2CAA2CI,GAAG,yBAA7D,UACI,qBAAIJ,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,sBAAMA,UAAU,kCAAkC,eAAa,OAAOG,KAAK,aAAaC,GAAG,aAA3F,SAAyGiI,MAE7G,oBAAIrI,UAAU,WAAd,SACI,sBAAMA,UAAU,2BAA2BG,KAAK,aAAaC,GAAG,aAAhE,SAA8EkI,SAkBtF,sBAAMtI,UAAU,SAAhB,SACI,wBAAQA,UAAU,+BAA+BK,KAAK,SAAtD,gC,eC6BbkI,MArDf,WACE,MAAwB3H,mBAAS,MAAjC,mBAAOwC,EAAP,KAAaoF,EAAb,KAEArB,qBAAU,WACR1E,MAAM,QACHQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUoF,EAAQpF,EAAKE,eAGjC,IAAMmF,EAAY,CAChBC,OAAQ,OACRC,eAAgB,OAChBC,MAAO,SAOT,OACE,sBAAK5I,UAAU,kBAAf,UAEE,wBAAQA,UAAU,UAAlB,SACA,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CACEoI,eAAkB,cAAC,IAAD,CAAMS,GAAG,IAAIvI,MAAOmI,EAApB,6BAClBJ,gBAAmB,cAAC,IAAD,CAAMQ,GAAG,cAAcvI,MAAOmI,EAA9B,mBACnBH,gBAAmB,cAAC,IAAD,CAAMO,GAAG,cAAcvI,MAAOmI,EAA9B,qBAEvB,cAAC,IAAD,UACA,uBAAMzI,UAAU,4DAAhB,UACE,cAAC,IAAD,CAAO8I,OAAK,EAACC,KAAK,IAAlB,SACE,oBAAI/I,UAAU,cAAd,6CAEF,cAAC,IAAD,CAAO+I,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAcrD,QAvBf,WACjBsD,OAAOC,SAASC,UAsBV,SACE,cAAC,EAAD,kBAON,wBAAQlJ,UAAU,eAAlB,SACE,mBAAGA,UAAU,0BAAb,SAA0CoD,GAAO,qBC/C1C+F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpG,MAAK,YAAkD,IAA/CqG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31e69933.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({className, onChange, onKeyPress, \r\n    name, id, type, style, placeholder, value, disabled, checked}) {\r\n    return <input \r\n    className = {className}\r\n    onChange = {onChange}\r\n    onKeyPress={onKeyPress}\r\n    name = {name} \r\n    id = {id}   \r\n    type = {type} \r\n    style = {style}\r\n    placeholder = {placeholder} \r\n    value = {value}\r\n    disabled = {disabled}\r\n    checked = {checked} //only use for checkbox type \r\n    ></input>\r\n}; \r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyPress: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    style: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool\r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/input\";\r\n\r\nfunction InsertPage() {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [jobURL, setJobURL] = useState(\"\");\r\n    const [checkNew, setCheckNew] = useState(false);\r\n    const [checkApplied, setCheckApplied] = useState(false);\r\n    const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n    const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n    const [status, setStatus] = useState(\"\");  \r\n    const [statusVerbiage, setStatusVerbiage] = useState(\"\");  \r\n    const [statusDate, setStatusDate] = useState(\"\");\r\n    const [disable, setDisable] = useState(false);\r\n    const [response, setResponse] = useState(\"\"); \r\n\r\n    function handleChange(event) {\r\n        const {value, name} = event.target; \r\n\r\n        switch (name){\r\n            case 'companyName':\r\n                setCompanyName(value);\r\n            break;\r\n            case 'jobURL':\r\n                setJobURL(value);\r\n            break;   \r\n            case 'new':\r\n                if (checkNew) {\r\n                    setCheckNew(false);\r\n                    //console.log(\"not checked\");\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckNew(true);\r\n                    //console.log(\"checked\");\r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Date to Apply\");\r\n                    setDisable(true);\r\n                }\r\n            break;  \r\n            case 'applied':\r\n                if (checkApplied) {\r\n                    setCheckApplied(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckApplied(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Applied Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'phoneCalled':\r\n                if (checkPhoneCalled) {\r\n                    setCheckPhoneCalled(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckPhoneCalled(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Phone Call Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'interviewed':\r\n                if (checkInterviewed) {\r\n                    setCheckInterviewed(false);\r\n                    setStatus(\"\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckInterviewed(true);  \r\n                    setStatus(value);\r\n                    setStatusVerbiage(\"Interview Date\");\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'applyDate' :\r\n            case 'appliedDate': \r\n            case 'phoneCallDate': \r\n            case 'interviewDate':\r\n                setStatusDate(value);\r\n            break;                                                                    \r\n            default:\r\n                console.log(\"Unidentified input field found in the insertPage form\");\r\n        }\r\n    }    \r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();  \r\n        if (companyName === \"\" || jobURL === \"\" || status === \"\") {\r\n            setResponse({\r\n                verbiage: \"Missing field(s): please make sure all fields are filled out! Thanks!\",\r\n                textColor: \"text-danger\"\r\n            });\r\n        }else if (status) {\r\n            if (statusDate === \"\") {\r\n                setResponse({\r\n                    verbiage: \"Missing field: please make sure the Date is filled out! Thanks!\",\r\n                    textColor: \"text-danger\"\r\n                });                    \r\n            }else {\r\n                saveToDB(); \r\n            }\r\n        }else {\r\n            saveToDB();   \r\n        }\r\n    }\r\n\r\n    const saveToDB = () => {\r\n        fetch (\"/create\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },    \r\n            body: JSON.stringify({ \r\n                companyName: companyName,\r\n                jobURL: jobURL,\r\n                status: status,\r\n                statusVerbiage: statusVerbiage,\r\n                statusDate: statusDate,\r\n                levelOfImp: \"\",\r\n                levelOfImpOrderNum: 0\r\n            }) \r\n        }).then((res) => res.json())\r\n        .then((data) => {\r\n            // console.log(data.message);\r\n            setResponse({\r\n                 verbiage: data.message,\r\n                 textColor: \"text-success\"\r\n                });\r\n\r\n            //clear fields \r\n            setCompanyName(\"\");\r\n            setJobURL(\"\");\r\n            setStatus(\"\");\r\n            setStatusVerbiage(\"\");\r\n            setStatusDate(\"\");\r\n            setCheckNew(false);\r\n            setCheckApplied(false);\r\n            setCheckPhoneCalled(false);\r\n            setCheckInterviewed(false);\r\n            setDisable(false); \r\n        });        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Input Company Name */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-6 col-form-label text-end\">Company Name & Job Role</label>\r\n                    <div className=\"col-6\">\r\n                        <Input \r\n                            name = \"companyName\"\r\n                            type = \"text\" \r\n                            onChange = {handleChange}\r\n                            placeholder = \"Enter Name, Role\"\r\n                            value = {companyName}\r\n                        /> \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Post URL */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-6 col-form-label text-end\">Job Post URL</label>\r\n                    <div className=\"col-6\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Title */}\r\n                {/* <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Job Post URL</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>                 */}\r\n                {/*Checkbox Status - New, Applied, Phone-Called, Interviewed */}\r\n                <div className = \"column mt-4 mb-4 d-flex justify-content-center\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" name=\"new\" value=\"New\" onChange = {handleChange} disabled={status === \"New\" ? null : disable}  checked={checkNew ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox1\">New</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" name=\"applied\" value=\"Applied\" onChange = {handleChange} disabled={status === \"Applied\" ? null : disable} checked={checkApplied ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox2\">Applied</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" name=\"phoneCalled\" value=\"Phone Call\" onChange = {handleChange} disabled={status === \"Phone Call\" ? null : disable} checked={checkPhoneCalled ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox3\">Phone-Called</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" name=\"interviewed\" value=\"Interview\" onChange = {handleChange} disabled={status === \"Interview\" ? null : disable} checked={checkInterviewed ? true : false}  />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox4\">Interviewed</label>\r\n                    </div>   \r\n                </div> \r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                {/* Checkbox Specific - New */}\r\n                    {checkNew ?                 \r\n                    <div className = \"row mb-3 d-flex justify-content-center\">\r\n                        <label className=\"col-sm-5 col-form-label\">{statusVerbiage}:</label>\r\n                        <div className=\"col-sm-5\">\r\n                            <Input \r\n                                name = \"applyDate\"\r\n                                type = \"date\"\r\n                                onChange = {handleChange}\r\n                                placeholder = \"Enter Date\"\r\n                                value = {statusDate}\r\n                            />   \r\n                        </div>\r\n                    </div> \r\n                    : null}\r\n                {/* Checkbox Specific - Applied */}\r\n                    {checkApplied ?                 \r\n                        <div className = \"row mb-3 d-flex justify-content-center\">\r\n                            <label className=\"col-sm-5 col-form-label\">{statusVerbiage}:</label>\r\n                            <div className=\"col-sm-5\">\r\n                                <Input \r\n                                    name = \"appliedDate\"\r\n                                    type = \"date\"\r\n                                    onChange = {handleChange}\r\n                                    placeholder = \"Enter Date\"\r\n                                    value = {statusDate}\r\n                                />   \r\n                            </div>\r\n                        </div> \r\n                    : null}                \r\n                {/* Checkbox Specific - Phone Called */}\r\n                    {checkPhoneCalled ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">{statusVerbiage}:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"phoneCallDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {statusDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                {/* Checkbox Specific - Interviewed */}    \r\n                    {checkInterviewed ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">{statusVerbiage}:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"interviewDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {statusDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                </div>\r\n                {/* Response - if submit successfully or not */}\r\n                { response ? \r\n                <div className=\"d-flex justify-content-center\">\r\n                    <p className={response.textColor + \" fw-normal fs-6\"}>{response.verbiage}</p>\r\n                </div> \r\n                : null}\r\n                {/* Submit Button - Add Job to Database */}\r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                    <Input\r\n                        type = \"submit\"\r\n                        value = \"Add Job\" \r\n                    />\r\n                </div>        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsertPage;","import {React, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction JobCard({jobAppId, companyName, jobURL, levelOfImportance, currentStatus, currentStatusSetDate, currentStatusVerbiage, savedNotes}) {\r\n    const cardWidthMargin = {\r\n        \"width\": \"850px\",\r\n        \"margin-left\": \"3rem\",\r\n        \"margin-right\": \"3rem\"\r\n      };\r\n\r\n    const [levelOfImpColor, setLevelOfImpColor] = useState(\"\"); \r\n    const [levelOfImp, setLevelOfImp] = useState(\"\");    \r\n    const [levelOfImpOrderNum, setlevelOfImpOrderNum] = useState(0);\r\n    const [isLevelUpdated, SetIsLevelUpdated] = useState(false);\r\n    const [newStatus, setNewStatus] = useState(\"\");\r\n    const [newStatusVerbiage, setNewStatusVerbiage] = useState(\"\");\r\n    const [newStatusSetDate, setNewStatusSetDate] = useState(\"\");\r\n    const [notesOnChange, setNotesOnChange] = useState(\"\");\r\n    const [isNotesUpdated, setIsNotesUpdated] = useState(false);\r\n    \r\n    const handleChange = (event) => {  \r\n        const {name, value} = event.target; \r\n\r\n        if (value === \"High\") {\r\n            setLevelOfImp(\"High\");\r\n            setlevelOfImpOrderNum(1);\r\n            setLevelOfImpColor(\"btn-danger\");\r\n            SetIsLevelUpdated(true);\r\n        }else if (value === \"Normal\") {\r\n            setLevelOfImp(\"Normal\");\r\n            setlevelOfImpOrderNum(2);\r\n            setLevelOfImpColor(\"btn-primary\");\r\n            SetIsLevelUpdated(true);\r\n        }\r\n\r\n        if (name === \"newStatus\") {\r\n            setNewStatus(value);\r\n        }else if (name === \"newStatusSetDate\") {\r\n            setNewStatusSetDate(value);\r\n        }else if (name === \"newStatusVerbiage\"){\r\n            setNewStatusVerbiage(value); \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const handleNotesChange = (event) => {\r\n        const value = event.target.value; \r\n        setNotesOnChange(value);\r\n        setIsNotesUpdated(true);\r\n    }\r\n\r\n    const handleUpdateStatusClicked = (event) => { \r\n        event.preventDefault();\r\n        updateJobStatus();\r\n\r\n        //clear fields\r\n        setNewStatus(\"\");\r\n        setNewStatusSetDate(\"\");\r\n        setNewStatusVerbiage(\"\"); \r\n    }\r\n\r\n    const updateJobImp = () => {\r\n            fetch (\"/updateJobImp\", {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },    \r\n                body: JSON.stringify({ \r\n                    _id: jobAppId,\r\n                    levelOfImp: levelOfImp,\r\n                    levelOfImpOrderNum: levelOfImpOrderNum\r\n                }) \r\n            }).then((res) => res.json())\r\n            // .then((data) => { //uncomment this when needed - data returned from the API endpoint\r\n            // }); \r\n    }\r\n\r\n    const updateJobStatus = () => {\r\n        fetch (\"/updateJobStatus\", {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },    \r\n            body: JSON.stringify({ \r\n                _id: jobAppId,\r\n                status: newStatus,\r\n                statusVerbiage: newStatusVerbiage,\r\n                statusDate: newStatusSetDate\r\n            }) \r\n        }).then((res) => res.json())\r\n        .then((data) => { //uncomment if additional customization needed \r\n            // console.log(\"SUCCESS\", data.updatedJobAppStatus);\r\n        }); \r\n    }\r\n\r\n    const handleSaveNotes = () => {\r\n        fetch (\"/saveNotes\", {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },    \r\n            body: JSON.stringify({ \r\n                _id: jobAppId,\r\n                savedNotes: notesOnChange\r\n            }) \r\n        }).then((res) => res.json())\r\n        .then((data) => { //uncomment if additional customization needed \r\n            console.log(\"SUCCESS\", data.foundSavedNotes);\r\n        }); \r\n    }\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const showModal = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"click!\");\r\n        setIsOpen(true);\r\n        if (savedNotes) {\r\n            setNotesOnChange(savedNotes); \r\n        }\r\n    };\r\n  \r\n    const hideModal = () => {\r\n      setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-left\">\r\n            <div className=\"card border-success mb-3\" style={cardWidthMargin}>\r\n                <div className=\"card-body text-success\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5 className=\"card-title\">{companyName}</h5>\r\n                        <div className=\"btn-group\">\r\n                            <select className={\"form-select btn \" + \r\n                            (levelOfImpColor ? levelOfImpColor \r\n                            :levelOfImportance === \"High\" ? \"btn-danger\"\r\n                            :levelOfImportance === \"Normal\" ? \"btn-primary\"\r\n                            : \"btn-success\")} \r\n                            aria-label=\"Default select example\" onChange={handleChange}>\r\n                                <option selected={levelOfImportance ? false : true}>Level of Importance</option>\r\n                                <option className=\"dropdown-item\" value=\"High\" selected={levelOfImportance === \"High\" ? true : false}>High</option>\r\n                                <option className=\"dropdown-item\" value=\"Normal\" selected={levelOfImportance === \"Normal\" ? true : false}>Normal</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        <a href={jobURL} target=\"_blank\" rel=\"noopener noreferrer\">{jobURL ? \"Job Site Here\" : null}</a>\r\n                        <br />\r\n                        <br />\r\n                        <p>{currentStatus} <span className=\"text-black-50 fw-light font-monospace\">- {currentStatusVerbiage}: {currentStatusSetDate}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent border-success m-0 p-1\">\r\n                    <div className=\"container\">\r\n                        <div className=\"d-flex row justify-content-between\">\r\n                            <div className=\"col-10\">\r\n                                <div className=\"row g-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"New Status\" aria-label=\"New Status\" name=\"newStatus\" value={newStatus} onChange={handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <select className=\"form-select\" name=\"newStatusVerbiage\" value={newStatusVerbiage} onChange={handleChange}>\r\n                                            <option selected>...</option>\r\n                                            <option className=\"dropdown-item\" value=\"Schedule on\">Schedule on</option>\r\n                                            <option className=\"dropdown-item\" value=\"Submit by\">Submit by</option>\r\n                                            <option className=\"dropdown-item\" value=\"applied on\">applied on</option>\r\n                                            <option className=\"dropdown-item\" value=\"Completed on\">Completed on</option>\r\n                                        </select>\r\n                                    </div>  \r\n                                    <div className=\"col-sm-3\">\r\n                                        <input type=\"date\" className=\"form-control\" placeholder=\"Date\" aria-label=\"Date\" name=\"newStatusSetDate\" value={newStatusSetDate} onChange={handleChange} />\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        <button\r\n                                            className=\"btn btn-outline-secondary border-0\"\r\n                                            type = \"submit\"\r\n                                            value = \"Update Status\" \r\n                                            onClick = {handleUpdateStatusClicked}>Update Status</button>       \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {isLevelUpdated ? updateJobImp() : null}\r\n                            <div className=\"col-2 d-flex flex-row-reverse\">\r\n                                <button className=\"btn\" onClick={showModal}>Details</button>\r\n                                <Modal show={isOpen} size=\"xl\" onHide={hideModal} scrollable=\"true\" centered>\r\n                                    <Modal.Header>\r\n                                        <Modal.Title>{companyName}</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>        \r\n                                        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n                                        dcvntras mssdattis ertgconsectetur drcvbpurus sitwef aw3famet fermentumdrtf. Qefxras justo eeodio,\r\n                                        dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n                                        consectetur ac, vestibulum at eros.\r\n                                        </p>\r\n                                        <div className=\"mb-3\">\r\n                                            <label for=\"noteTakingTextArea\" className=\"form-label\">Notes</label>\r\n                                            <textarea className=\"form-control\" id=\"noteTakingTextArea\" rows=\"10\" value={notesOnChange} onChange={handleNotesChange}></textarea>\r\n                                        </div>\r\n                                        {isNotesUpdated ? handleSaveNotes() : null}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <button onClick={hideModal}>Close</button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobCard;","import React, {useState, useEffect} from \"react\";\r\nimport JobCard from \"./JobCard\";\r\n\r\nfunction TrackPage() {\r\n    const [totalJobs, setTotalJobs] = useState({\r\n        count: 0,\r\n        data: []\r\n    });\r\n    const [newJobs, setNewJobs] = useState(0);\r\n    const [appliedJobs, setAppliedJobs] = useState(0);\r\n    const [phoneCalledJobs, setPhoneCalledJobs] = useState(0);\r\n    const [interviewedJobs, setInterviewedJobs] = useState(0);\r\n\r\n    useEffect(() => {\r\n      fetch(\"/findAll\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            const allJobs = data.foundAllJobs;\r\n            const allJobsTemp = [];\r\n\r\n            allJobs.forEach((job) => {\r\n               allJobsTemp.push(job);  \r\n            });\r\n\r\n            setTotalJobs({\r\n                count: allJobs.length,\r\n                data: allJobsTemp\r\n            });\r\n        });  \r\n\r\n        fetch(\"/findAll/status/new\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setNewJobs((data.foundNewJobs).length)\r\n        });  \r\n        fetch(\"/findAll/status/applied\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setAppliedJobs((data.foundAppliedJobs).length)\r\n        });   \r\n        fetch(\"/findAll/status/phoneCalled\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setPhoneCalledJobs((data.foundPhoneCalledJobs).length)\r\n        });\r\n        fetch(\"/findAll/status/interviewed\")\r\n        .then((res) => res.json())  \r\n        .then((data) => {\r\n            setInterviewedJobs((data.foundInterviewedJobs).length)\r\n        });        \r\n    });\r\n\r\n    // const lineBreakStyle = {\r\n    //     height:\"2px\",\r\n    //     \"border-width\": 0,\r\n    //     color: \"gray\",\r\n    //     \"background-color\": \"green\"\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n             <div className=\"row d-flex justify-content-center mb-5 mt-4\">\r\n                <div className=\"col-2 text-center\">Total Jobs <br/><p>{totalJobs.count ? totalJobs.count : \"0\"}</p></div>\r\n                <div className=\"col-2 text-center\">New <br/><p>{newJobs ? newJobs : \"0\"}</p></div>   \r\n                <div className=\"col-2 text-center\">Applied <br/><p>{appliedJobs ? appliedJobs : \"0\"}</p></div>  \r\n                <div className=\"col-2 text-center\">Phone Calls <br/><p>{phoneCalledJobs ? phoneCalledJobs : \"0\"}</p></div>  \r\n                <div className=\"col-2 text-center\">Interviews <br/><p>{interviewedJobs ? interviewedJobs : \"0\"}</p></div>   \r\n            </div>    \r\n            <div className=\"row d-flex justify-content-center\">\r\n                {/* Sample Job Card */}\r\n                {/* <JobCard \r\n                    companyName=\"Facebook\" \r\n                    jobURL = \"https://www.facebook.com/careers/v2/jobs/2948019165525651/\" \r\n                    currentStatus = \"New\"\r\n                    currentStatusVerbiage = \"Date to Apply\"\r\n                    currentStatusSetDate = \"09/18/21\"\r\n                    />                     */}   \r\n                <div className=\"col\">\r\n                {totalJobs.data.sort((a, b) => {\r\n                    return a.levelOfImpOrderNum - b.levelOfImpOrderNum;\r\n                }).map((job) => (\r\n                        <JobCard \r\n                            key = {job._id}\r\n                            companyName = {job.companyName}\r\n                            jobURL = {job.jobURL}\r\n                            currentStatus = {job.status}\r\n                            currentStatusVerbiage = {job.statusVerbiage}\r\n                            currentStatusSetDate = {job.statusDate}\r\n                            jobAppId = {job._id}\r\n                            levelOfImportance = {job.levelOfImp}\r\n                            savedNotes = {job.savedNotes}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>      \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrackPage;","import React from \"react\"; \r\n\r\nfunction Navbar({RouterLinkHome, RouterLinkEnter, RouterLinkTrack}) {\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <span className=\"navbar-brand p-2 mx-2\">{RouterLinkHome}</span>\r\n                    <button className=\"navbar-toggler mx-5\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse mx-4 text-light\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link active text-light mx-2\" aria-current=\"page\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkEnter}</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link text-light mx-2\" name=\"enter-jobs\" id=\"enter-jobs\">{RouterLinkTrack}</span>\r\n                            </li>\r\n                            {/* Dropdown Option */}\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/track-jobs\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Track\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/track-jobs/general\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <button className=\"btn btn-outline-success mx-4\" type=\"submit\">Sign On</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    );\r\n}; \r\n\r\nexport default Navbar;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport InsertPage from \"./components/DataInsert/InsertPage\";\nimport TrackPage from \"./components/Dashboard/TrackPage\";\nimport Navbar from \"./components/UI/navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())  \n      .then((data) => setData(data.message));  \n  });\n\n  const linkStyle = {\n    margin: \"0rem\",\n    textDecoration: \"none\",\n    color: 'white'\n  };\n\n  const reloadPage = () => { \n    window.location.reload(); \n}\n\n  return (\n    <div className=\"container-fluid\">\n      \n      <header className=\"row m-5\">\n      <Router>\n        <div>\n          <Navbar\n            RouterLinkHome = {<Link to=\"/\" style={linkStyle}>JXT Job Tracker</Link>}\n            RouterLinkEnter = {<Link to=\"/enter-page\" style={linkStyle}>Enter</Link>}\n            RouterLinkTrack = {<Link to=\"/track-page\" style={linkStyle}>Track</Link>}\n          />\n        <Switch>\n        <body className=\"row d-flex justify-content-center align-items-center mt-5\">\n          <Route exact path=\"/\">\n            <h1 className=\"text-center\">Welcome to JXT Job Track App!</h1>\n          </Route>\n          <Route path=\"/enter-page\">\n            <InsertPage />\n          </Route>\n          <Route path=\"/track-page\" onClick = {reloadPage}>\n            <TrackPage />\n          </Route>\n          </body>\n        </Switch>\n        </div>\n      </Router>\n      </header>\n      <footer className=\"fixed-bottom\">\n        <p className=\"cpText text-center mt-5\">{ !data ? \"Loading...\" : data }</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}