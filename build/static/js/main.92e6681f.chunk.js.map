{"version":3,"sources":["components/UI/input.jsx","components/DataInsert/InsertPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","onChange","onKeyPress","name","id","type","style","placeholder","value","disabled","InsertPage","useState","companyName","setCompanyName","jobURL","setJobURL","checkNew","setCheckNew","applyDate","setApplyDate","checkApplied","setCheckApplied","appliedDate","setAppliedDate","checkPhoneCalled","setCheckPhoneCalled","phoneCallDate","setPhoneCallDate","checkInterviewed","setCheckInterviewed","interviewDate","setInterviewDate","enabledValue","setEnabledValue","disable","setDisable","handleChange","event","target","console","log","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","className","for","App","React","setData","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92e6681f.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({onChange, onKeyPress, \r\n    name, id, type, style, placeholder, value, disabled}) {\r\n    return <input \r\n    onChange = {onChange}\r\n    onKeyPress={onKeyPress}\r\n    name = {name} \r\n    id = {id}   \r\n    type = {type} \r\n    style = {style}\r\n    placeholder = {placeholder} \r\n    value = {value}\r\n    disabled = {disabled}\r\n    ></input>\r\n}; \r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyPress: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    style: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool\r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/input\";\r\n\r\nfunction InsertPage() {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [jobURL, setJobURL] = useState(\"\");\r\n    const [checkNew, setCheckNew] = useState(false);\r\n    const [applyDate, setApplyDate] = useState(\"\");\r\n    const [checkApplied, setCheckApplied] = useState(false);\r\n    const [appliedDate, setAppliedDate] = useState(\"\");\r\n    const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n    const [phoneCallDate, setPhoneCallDate] = useState(\"\");\r\n    const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n    const [interviewDate, setInterviewDate] = useState(\"\");\r\n    const [enabledValue, setEnabledValue] = useState(\"\");  \r\n    const [disable, setDisable] = useState(false);\r\n\r\n    function handleChange(event) {\r\n        const {value, name} = event.target; \r\n        \r\n        switch (name){\r\n            case 'companyName':\r\n                setCompanyName(value);\r\n            break;\r\n            case 'jobURL':\r\n                setJobURL(value);\r\n            break;   \r\n            case 'new':\r\n                if (checkNew) {\r\n                    setCheckNew(false);\r\n                    //console.log(\"not checked\");\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckNew(true);\r\n                    //console.log(\"checked\");\r\n                    setEnabledValue(value);\r\n                    setDisable(true);\r\n                }\r\n            break;  \r\n            case 'applied':\r\n                if (checkApplied) {\r\n                    setCheckApplied(false);\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckApplied(true);  \r\n                    setEnabledValue(value);\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'phoneCalled':\r\n                if (checkPhoneCalled) {\r\n                    setCheckPhoneCalled(false);\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckPhoneCalled(true);  \r\n                    setEnabledValue(value);\r\n                    setDisable(true);\r\n                }\r\n            break; \r\n            case 'interviewed':\r\n                if (checkInterviewed) {\r\n                    setCheckInterviewed(false);\r\n                    setDisable(false);\r\n                }else {\r\n                    setCheckInterviewed(true);  \r\n                    setEnabledValue(value);\r\n                    setDisable(true);\r\n                }\r\n            break;                             \r\n            case 'applyDate':\r\n                setApplyDate(value);\r\n            break;  \r\n            case 'appliedDate':\r\n                setAppliedDate(value);\r\n            break; \r\n            case 'phoneCallDate':\r\n                setPhoneCallDate(value);\r\n            break;      \r\n            case 'interviewDate':\r\n                setInterviewDate(value);\r\n            break;                                   \r\n            default:\r\n                console.log(\"Unidentified input field found in the insertPage form\");\r\n        }\r\n    }    \r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();  \r\n        fetch (\"/create\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },    \r\n              body: JSON.stringify({ \r\n                  //name: name \r\n              }) \r\n        }).then((res) => res.json())\r\n        .then((data) => console.log(data.message));               \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n            {/* Input Company Name */}\r\n            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Company Name</label>\r\n                    <div className=\"col-sm-2\">\r\n                        <Input \r\n                            name = \"companyName\"\r\n                            type = \"text\" \r\n                            onChange = {handleChange}\r\n                            placeholder = \"Enter Company Name\"\r\n                            value = {companyName}\r\n                        /> \r\n                    </div>\r\n                </div>\r\n                {/* Input Job Post URL */}\r\n                <div className = \"row mb-3 d-flex justify-content-center\">\r\n                    <label className=\"col-sm-2 col-form-label\">Job Post URL</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <Input \r\n                        name = \"jobURL\"\r\n                        type = \"url\"\r\n                        onChange = {handleChange}\r\n                        placeholder = \"Enter URL\"\r\n                        value = {jobURL}\r\n                    />   \r\n                    </div>\r\n                </div>\r\n                {/*Checkbox - New, Applied, Phone-Called, Interviewed */}\r\n                <div className = \"column mt-4 mb-4 d-flex justify-content-center\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" name=\"new\" value=\"new\" onChange = {handleChange} disabled={enabledValue === \"new\" ? null : disable} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox1\">New</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" name=\"applied\" value=\"applied\" onChange = {handleChange} disabled={enabledValue === \"applied\" ? null : disable} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox2\">Applied</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" name=\"phoneCalled\" value=\"phoneCalled\" onChange = {handleChange} disabled={enabledValue === \"phoneCalled\" ? null : disable} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox3\">Phone-Called</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <Input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" name=\"interviewed\" value=\"interviewed\" onChange = {handleChange} disabled={enabledValue === \"interviewed\" ? null : disable} />\r\n                        <label className=\"form-check-label\" for=\"inlineCheckbox4\">Interviewed</label>\r\n                    </div>   \r\n                </div> \r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                {/* Checkbox Specific - New */}\r\n                    {checkNew ?                 \r\n                    <div className = \"row mb-3 d-flex justify-content-center\">\r\n                        <label className=\"col-sm-5 col-form-label\">Date to Apply:</label>\r\n                        <div className=\"col-sm-5\">\r\n                            <Input \r\n                                name = \"applyDate\"\r\n                                type = \"date\"\r\n                                onChange = {handleChange}\r\n                                placeholder = \"Enter Date\"\r\n                                value = {applyDate}\r\n                            />   \r\n                        </div>\r\n                    </div> \r\n                    : null}\r\n                {/* Checkbox Specific - Applied */}\r\n                    {checkApplied ?                 \r\n                        <div className = \"row mb-3 d-flex justify-content-center\">\r\n                            <label className=\"col-sm-5 col-form-label\">Applied Date:</label>\r\n                            <div className=\"col-sm-5\">\r\n                                <Input \r\n                                    name = \"appliedDate\"\r\n                                    type = \"date\"\r\n                                    onChange = {handleChange}\r\n                                    placeholder = \"Enter Date\"\r\n                                    value = {appliedDate}\r\n                                />   \r\n                            </div>\r\n                        </div> \r\n                    : null}                \r\n                {/* Checkbox Specific - Phone Called */}\r\n                    {checkPhoneCalled ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">Phone Call(ed) Date:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"phoneCallDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {phoneCallDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                {/* Checkbox Specific - Interviewed */}    \r\n                    {checkInterviewed ?                 \r\n                            <div className = \"row mb-3 d-flex justify-content-center\">\r\n                                <label className=\"col-sm-6 col-form-label\">Interview(ed) Date:</label>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Input \r\n                                        name = \"interviewDate\"\r\n                                        type = \"date\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder = \"Enter Date\"\r\n                                        value = {interviewDate}\r\n                                    />   \r\n                                </div>\r\n                            </div> \r\n                    : null}                    \r\n                </div>\r\n                {/* Submit Button - Add Job to Database */}\r\n                <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n                    <Input\r\n                        type = \"submit\"\r\n                        value = \"Add Job\" \r\n                    />\r\n                </div>        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsertPage;","import React from \"react\";\nimport './App.css';\nimport InsertPage from \"./components/DataInsert/InsertPage\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())  \n      .then((data) => setData(data.message));  \n\n  });\n\n  return (\n    <div className=\"container-fluid\">\n      <header className=\"row m-5\">\n        <h1 className=\"text-center\">Welcome to JXT Job Track App</h1>\n      </header>\n      <body className=\"row d-flex justify-content-center align-items-center\">\n      {<InsertPage />}\n      </body>\n      <footer>\n        <p className=\"cpText text-center mt-5\">{ !data ? \"Loading...\" : data }</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}